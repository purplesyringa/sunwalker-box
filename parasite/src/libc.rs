#![allow(dead_code, non_upper_case_globals)]
use crate::syscall_wrapper::SyscallWrapper;
pub const __S_IFBLK: isize = 0060000usize as isize;
pub const __NR_waitid: isize = 247usize as isize;
pub const __NR_fdatasync: isize = 75usize as isize;
pub const statfs: SyscallWrapper = SyscallWrapper(__NR_statfs);
pub const __NR_mq_getsetattr: isize = 245usize as isize;
pub const rseq: SyscallWrapper = SyscallWrapper(__NR_rseq);
pub const __SSP_STRONG__: isize = 3usize as isize;
pub const setns: SyscallWrapper = SyscallWrapper(__NR_setns);
pub const EMULTIHOP: isize = 72usize as isize;
pub const ftruncate: SyscallWrapper = SyscallWrapper(__NR_ftruncate);
pub const sendfile: SyscallWrapper = SyscallWrapper(__NR_sendfile);
pub const O_NOCTTY: isize = 0400usize as isize;
pub const openat2: SyscallWrapper = SyscallWrapper(__NR_openat2);
pub const rt_sigpending: SyscallWrapper = SyscallWrapper(__NR_rt_sigpending);
pub const __NR_sched_getaffinity: isize = 204usize as isize;
pub const getuid: SyscallWrapper = SyscallWrapper(__NR_getuid);
pub const __NR_connect: isize = 42usize as isize;
pub const __NR_epoll_pwait: isize = 281usize as isize;
pub const __UINT_LEAST16_MAX__: isize = 0xffffusize as isize;
pub const __FLT16_HAS_QUIET_NAN__: isize = 1usize as isize;
pub const __NR_init_module: isize = 175usize as isize;
pub const __ATOMIC_ACQUIRE: isize = 2usize as isize;
pub const __FLT128_MAX_10_EXP__: isize = 4932usize as isize;
pub const __NR_delete_module: isize = 176usize as isize;
pub const __NR_exit_group: isize = 231usize as isize;
pub const __FLT_MIN__: isize = 1usize as isize;
pub const __GCC_IEC_559_COMPLEX: isize = 2usize as isize;
pub const __F_GETSIG: isize = 11usize as isize;
pub const security: SyscallWrapper = SyscallWrapper(__NR_security);
pub const __SIZEOF_FLOAT80__: isize = 16usize as isize;
pub const __NR_mkdirat: isize = 258usize as isize;
pub const EUNATCH: isize = 49usize as isize;
pub const __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI: isize = 0usize as isize;
pub const __NR_io_uring_enter: isize = 426usize as isize;
pub const __NR_accept: isize = 43usize as isize;
pub const __NR_rt_sigsuspend: isize = 130usize as isize;
pub const newfstatat: SyscallWrapper = SyscallWrapper(__NR_newfstatat);
pub const __NR_openat: isize = 257usize as isize;
pub const __NR_name_to_handle_at: isize = 303usize as isize;
pub const reboot: SyscallWrapper = SyscallWrapper(__NR_reboot);
pub const request_key: SyscallWrapper = SyscallWrapper(__NR_request_key);
pub const __NR_getpgid: isize = 121usize as isize;
pub const __NR_setdomainname: isize = 171usize as isize;
pub const __NR_open: isize = 2usize as isize;
pub const O_ACCMODE: isize = 0003usize as isize;
pub const rt_sigreturn: SyscallWrapper = SyscallWrapper(__NR_rt_sigreturn);
pub const __CHAR_BIT__: isize = 8usize as isize;
pub const inotify_rm_watch: SyscallWrapper = SyscallWrapper(__NR_inotify_rm_watch);
pub const __NR_timerfd_settime: isize = 286usize as isize;
pub const __NR_getxattr: isize = 191usize as isize;
pub const sched_setaffinity: SyscallWrapper = SyscallWrapper(__NR_sched_setaffinity);
pub const EAFNOSUPPORT: isize = 97usize as isize;
pub const EREMCHG: isize = 78usize as isize;
pub const __NR_semop: isize = 65usize as isize;
pub const msgctl: SyscallWrapper = SyscallWrapper(__NR_msgctl);
pub const sync: SyscallWrapper = SyscallWrapper(__NR_sync);
pub const __NR_swapoff: isize = 168usize as isize;
pub const EACCES: isize = 13usize as isize;
pub const __UINT8_MAX__: isize = 0xffusize as isize;
pub const EL3RST: isize = 47usize as isize;
pub const __SCHAR_WIDTH__: isize = 8usize as isize;
pub const __NR_io_submit: isize = 209usize as isize;
pub const flock: SyscallWrapper = SyscallWrapper(__NR_flock);
pub const EDESTADDRREQ: isize = 89usize as isize;
pub const __WINT_MAX__: isize = 0xffffffffusize as isize;
pub const __NR_epoll_ctl_old: isize = 214usize as isize;
pub const __NR_ioperm: isize = 173usize as isize;
pub const EILSEQ: isize = 84usize as isize;
pub const __NR_shmat: isize = 30usize as isize;
pub const ESPIPE: isize = 29usize as isize;
pub const tkill: SyscallWrapper = SyscallWrapper(__NR_tkill);
pub const __NR_ioprio_get: isize = 252usize as isize;
pub const munmap: SyscallWrapper = SyscallWrapper(__NR_munmap);
pub const SYS_fdatasync: isize = __NR_fdatasync;
pub const fdatasync: SyscallWrapper = SyscallWrapper(__NR_fdatasync);
pub const __NR_setpriority: isize = 141usize as isize;
pub const __OFF_T_MATCHES_OFF64_T: isize = 1usize as isize;
pub const __NR_rt_sigqueueinfo: isize = 129usize as isize;
pub const EMLINK: isize = 31usize as isize;
pub const __ORDER_LITTLE_ENDIAN__: isize = 1234usize as isize;
pub const __SIZE_MAX__: isize = 0xffffffffffffffffusize as isize;
pub const __NR_nanosleep: isize = 35usize as isize;
pub const clock_getres: SyscallWrapper = SyscallWrapper(__NR_clock_getres);
pub const pkey_alloc: SyscallWrapper = SyscallWrapper(__NR_pkey_alloc);
pub const pwritev2: SyscallWrapper = SyscallWrapper(__NR_pwritev2);
pub const __WCHAR_MAX__: isize = 0x7fffffffusize as isize;
pub const mremap: SyscallWrapper = SyscallWrapper(__NR_mremap);
pub const __NR_pidfd_send_signal: isize = 424usize as isize;
pub const MADV_MERGEABLE: isize = 12usize as isize;
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2: isize = 1usize as isize;
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4: isize = 1usize as isize;
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8: isize = 1usize as isize;
pub const __NR_getpeername: isize = 52usize as isize;
pub const __S_IREAD: isize = 0400usize as isize;
pub const __GCC_ATOMIC_CHAR_LOCK_FREE: isize = 2usize as isize;
pub const inotify_init: SyscallWrapper = SyscallWrapper(__NR_inotify_init);
pub const __NR_shmdt: isize = 67usize as isize;
pub const __GCC_IEC_559: isize = 2usize as isize;
pub const adjtimex: SyscallWrapper = SyscallWrapper(__NR_adjtimex);
pub const __FLT32X_DECIMAL_DIG__: isize = 17usize as isize;
pub const F_RDLCK: isize = 0usize as isize;
pub const __NR_fanotify_init: isize = 300usize as isize;
pub const __FLT_EVAL_METHOD__: isize = 0usize as isize;
pub const __NR_fsopen: isize = 430usize as isize;
pub const SYS_fsopen: isize = __NR_fsopen;
pub const fsopen: SyscallWrapper = SyscallWrapper(__NR_fsopen);
pub const chroot: SyscallWrapper = SyscallWrapper(__NR_chroot);
pub const __NR_read: isize = 0usize as isize;
pub const __FLT64_DECIMAL_DIG__: isize = 17usize as isize;
pub const __CET__: isize = 3usize as isize;
pub const preadv: SyscallWrapper = SyscallWrapper(__NR_preadv);
pub const __NR_kcmp: isize = 312usize as isize;
pub const __HAVE_GENERIC_SELECTION: isize = 1usize as isize;
pub const __NR_sched_setparam: isize = 142usize as isize;
pub const __GCC_ATOMIC_CHAR32_T_LOCK_FREE: isize = 2usize as isize;
pub const __NR_swapon: isize = 167usize as isize;
pub const __NR_io_getevents: isize = 208usize as isize;
pub const lgetxattr: SyscallWrapper = SyscallWrapper(__NR_lgetxattr);
pub const mq_timedreceive: SyscallWrapper = SyscallWrapper(__NR_mq_timedreceive);
pub const MAP_32BIT: isize = 0x40usize as isize;
pub const __NR_link: isize = 86usize as isize;
pub const __NR_timer_gettime: isize = 224usize as isize;
pub const readlink: SyscallWrapper = SyscallWrapper(__NR_readlink);
pub const futimesat: SyscallWrapper = SyscallWrapper(__NR_futimesat);
pub const setresgid: SyscallWrapper = SyscallWrapper(__NR_setresgid);
pub const __NR_sendmmsg: isize = 307usize as isize;
pub const __S_IFIFO: isize = 0010000usize as isize;
pub const mount_setattr: SyscallWrapper = SyscallWrapper(__NR_mount_setattr);
pub const EOWNERDEAD: isize = 130usize as isize;
pub const __NR_timerfd_create: isize = 283usize as isize;
pub const __NR_gettid: isize = 186usize as isize;
pub const __UINT_FAST64_MAX__: isize = 0xffffffffffffffffusize as isize;
pub const pause: SyscallWrapper = SyscallWrapper(__NR_pause);
pub const vmsplice: SyscallWrapper = SyscallWrapper(__NR_vmsplice);
pub const get_thread_area: SyscallWrapper = SyscallWrapper(__NR_get_thread_area);
pub const __STATFS_MATCHES_STATFS64: isize = 1usize as isize;
pub const ENOTTY: isize = 25usize as isize;
pub const __FINITE_MATH_ONLY__: isize = 0usize as isize;
pub const signalfd4: SyscallWrapper = SyscallWrapper(__NR_signalfd4);
pub const __NR_set_tid_address: isize = 218usize as isize;
pub const __FLT32X_MAX_EXP__: isize = 1024usize as isize;
pub const EBADE: isize = 52usize as isize;
pub const EBADF: isize = 9usize as isize;
pub const EBADR: isize = 53usize as isize;
pub const __NR_setregid: isize = 114usize as isize;
pub const __NR_setitimer: isize = 38usize as isize;
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1: isize = 1usize as isize;
pub const EADV: isize = 68usize as isize;
pub const ERANGE: isize = 34usize as isize;
pub const __FLT32_HAS_DENORM__: isize = 1usize as isize;
pub const ECANCELED: isize = 125usize as isize;
pub const SYS_setitimer: isize = __NR_setitimer;
pub const setitimer: SyscallWrapper = SyscallWrapper(__NR_setitimer);
pub const S_IFBLK: isize = __S_IFBLK;
pub const SYS_openat: isize = __NR_openat;
pub const openat: SyscallWrapper = SyscallWrapper(__NR_openat);
pub const SYS_shmat: isize = __NR_shmat;
pub const shmat: SyscallWrapper = SyscallWrapper(__NR_shmat);
pub const __UINT_FAST8_MAX__: isize = 0xffusize as isize;
pub const __NR_membarrier: isize = 324usize as isize;
pub const SYS_open: isize = __NR_open;
pub const open: SyscallWrapper = SyscallWrapper(__NR_open);
pub const __FLT32_MAX_10_EXP__: isize = 38usize as isize;
pub const __DEC64_MAX_EXP__: isize = 385usize as isize;
pub const __O_NOATIME: isize = 01000000usize as isize;
pub const __S_IFMT: isize = 0170000usize as isize;
pub const ETXTBSY: isize = 26usize as isize;
pub const ENOMEM: isize = 12usize as isize;
pub const inotify_init1: SyscallWrapper = SyscallWrapper(__NR_inotify_init1);
pub const __INT_LEAST8_WIDTH__: isize = 8usize as isize;
pub const fchdir: SyscallWrapper = SyscallWrapper(__NR_fchdir);
pub const MCL_CURRENT: isize = 1usize as isize;
pub const __NR_io_uring_register: isize = 427usize as isize;
pub const __UINT_LEAST64_MAX__: isize = 0xffffffffffffffffusize as isize;
pub const _ERRNO_H: isize = 1usize as isize;
pub const __NR_mq_unlink: isize = 241usize as isize;
pub const SYS_shmdt: isize = __NR_shmdt;
pub const shmdt: SyscallWrapper = SyscallWrapper(__NR_shmdt);
pub const msgsnd: SyscallWrapper = SyscallWrapper(__NR_msgsnd);
pub const setpgid: SyscallWrapper = SyscallWrapper(__NR_setpgid);
pub const __NR_request_key: isize = 249usize as isize;
pub const __SHRT_MAX__: isize = 0x7fffusize as isize;
pub const fsmount: SyscallWrapper = SyscallWrapper(__NR_fsmount);
pub const __LDBL_MAX__: isize = 1usize as isize;
pub const PROT_NONE: isize = 0x0usize as isize;
pub const __FLT64X_MAX_10_EXP__: isize = 4932usize as isize;
pub const __NR_get_robust_list: isize = 274usize as isize;
pub const __NR_get_kernel_syms: isize = 177usize as isize;
pub const __NR_statx: isize = 332usize as isize;
pub const __NR_mkdir: isize = 83usize as isize;
pub const __O_CLOEXEC: isize = 02000000usize as isize;
pub const __LDBL_IS_IEC_60559__: isize = 2usize as isize;
pub const utimes: SyscallWrapper = SyscallWrapper(__NR_utimes);
pub const __FLT64X_HAS_QUIET_NAN__: isize = 1usize as isize;
pub const getcwd: SyscallWrapper = SyscallWrapper(__NR_getcwd);
pub const process_vm_readv: SyscallWrapper = SyscallWrapper(__NR_process_vm_readv);
pub const __UINT_LEAST8_MAX__: isize = 0xffusize as isize;
pub const MAP_EXECUTABLE: isize = 0x01000usize as isize;
pub const __GCC_ATOMIC_BOOL_LOCK_FREE: isize = 2usize as isize;
pub const __NR_semctl: isize = 66usize as isize;
pub const __FLT128_DENORM_MIN__: isize = 6usize as isize;
pub const EINPROGRESS: isize = 115usize as isize;
pub const __NR_sysinfo: isize = 99usize as isize;
pub const epoll_ctl: SyscallWrapper = SyscallWrapper(__NR_epoll_ctl);
pub const __NR_getrandom: isize = 318usize as isize;
pub const __NR_utime: isize = 132usize as isize;
pub const __NR_poll: isize = 7usize as isize;
pub const __linux: isize = 1usize as isize;
pub const __DEC32_EPSILON__: isize = 1usize as isize;
pub const __FLT_EVAL_METHOD_TS_18661_3__: isize = 0usize as isize;
pub const _BITS_TYPES_H: isize = 1usize as isize;
pub const fspick: SyscallWrapper = SyscallWrapper(__NR_fspick);
pub const __unix: isize = 1usize as isize;
pub const SYS_accept: isize = __NR_accept;
pub const accept: SyscallWrapper = SyscallWrapper(__NR_accept);
pub const SYS_kcmp: isize = __NR_kcmp;
pub const kcmp: SyscallWrapper = SyscallWrapper(__NR_kcmp);
pub const clock_adjtime: SyscallWrapper = SyscallWrapper(__NR_clock_adjtime);
pub const __UINT32_MAX__: isize = 0xffffffffusize as isize;
pub const geteuid: SyscallWrapper = SyscallWrapper(__NR_geteuid);
pub const flistxattr: SyscallWrapper = SyscallWrapper(__NR_flistxattr);
pub const PROT_GROWSDOWN: isize = 0x01000000usize as isize;
pub const getresgid: SyscallWrapper = SyscallWrapper(__NR_getresgid);
pub const __NR_mq_timedsend: isize = 242usize as isize;
pub const __NR_prlimit64: isize = 302usize as isize;
pub const __S_ISVTX: isize = 01000usize as isize;
pub const __NR_timerfd_gettime: isize = 287usize as isize;
pub const __NR_pkey_free: isize = 331usize as isize;
pub const _ATFILE_SOURCE: isize = 1usize as isize;
pub const __NR_ioctl: isize = 16usize as isize;
pub const __NR_futex_waitv: isize = 449usize as isize;
pub const ENOTBLK: isize = 15usize as isize;
pub const __WINT_MIN__: isize = 0usize as isize;
pub const __NR_removexattr: isize = 197usize as isize;
pub const access: SyscallWrapper = SyscallWrapper(__NR_access);
pub const EPROTOTYPE: isize = 91usize as isize;
pub const ERESTART: isize = 85usize as isize;
pub const F_LOCK: isize = 1usize as isize;
pub const EISNAM: isize = 120usize as isize;
pub const SYS_ioprio_get: isize = __NR_ioprio_get;
pub const ioprio_get: SyscallWrapper = SyscallWrapper(__NR_ioprio_get);
pub const __FLT32X_IS_IEC_60559__: isize = 2usize as isize;
pub const __NR_lchown: isize = 94usize as isize;
pub const ENOMSG: isize = 42usize as isize;
pub const __INT_LEAST16_WIDTH__: isize = 16usize as isize;
pub const rt_sigaction: SyscallWrapper = SyscallWrapper(__NR_rt_sigaction);
pub const SYS_timerfd_gettime: isize = __NR_timerfd_gettime;
pub const timerfd_gettime: SyscallWrapper = SyscallWrapper(__NR_timerfd_gettime);
pub const __NR_inotify_init1: isize = 294usize as isize;
pub const __SCHAR_MAX__: isize = 0x7fusize as isize;
pub const __NR_semget: isize = 64usize as isize;
pub const __FLT128_MANT_DIG__: isize = 113usize as isize;
pub const EALREADY: isize = 114usize as isize;
pub const getgid: SyscallWrapper = SyscallWrapper(__NR_getgid);
pub const __NR_nfsservctl: isize = 180usize as isize;
pub const __NR_inotify_add_watch: isize = 254usize as isize;
pub const __NR_munlockall: isize = 152usize as isize;
pub const __NR_perf_event_open: isize = 298usize as isize;
pub const __NR_prctl: isize = 157usize as isize;
pub const __GCC_ATOMIC_POINTER_LOCK_FREE: isize = 2usize as isize;
pub const __NR_rt_sigpending: isize = 127usize as isize;
pub const SYS_mkdir: isize = __NR_mkdir;
pub const mkdir: SyscallWrapper = SyscallWrapper(__NR_mkdir);
pub const clock_nanosleep: SyscallWrapper = SyscallWrapper(__NR_clock_nanosleep);
pub const __NR_lremovexattr: isize = 198usize as isize;
pub const fchown: SyscallWrapper = SyscallWrapper(__NR_fchown);
pub const execve: SyscallWrapper = SyscallWrapper(__NR_execve);
pub const _POSIX_SOURCE: isize = 1usize as isize;
pub const __NR_pwritev: isize = 296usize as isize;
pub const __NR_pwritev2: isize = 328usize as isize;
pub const __NR_get_mempolicy: isize = 239usize as isize;
pub const __NR_quotactl: isize = 179usize as isize;
pub const _DEFAULT_SOURCE: isize = 1usize as isize;
pub const __NR_newfstatat: isize = 262usize as isize;
pub const S_IFMT: isize = __S_IFMT;
pub const splice: SyscallWrapper = SyscallWrapper(__NR_splice);
pub const __FLT32X_MANT_DIG__: isize = 53usize as isize;
pub const __NR_tuxcall: isize = 184usize as isize;
pub const __NR_setresuid: isize = 117usize as isize;
pub const __NR_mincore: isize = 27usize as isize;
pub const __NR_rt_sigreturn: isize = 15usize as isize;
pub const ETIMEDOUT: isize = 110usize as isize;
pub const __NR_epoll_wait_old: isize = 215usize as isize;
pub const __X32_SYSCALL_BIT: isize = 0x40000000usize as isize;
pub const llistxattr: SyscallWrapper = SyscallWrapper(__NR_llistxattr);
pub const fcntl: SyscallWrapper = SyscallWrapper(__NR_fcntl);
pub const __NR_setfsgid: isize = 123usize as isize;
pub const fremovexattr: SyscallWrapper = SyscallWrapper(__NR_fremovexattr);
pub const dup: SyscallWrapper = SyscallWrapper(__NR_dup);
pub const ENODATA: isize = 61usize as isize;
pub const __NR_fremovexattr: isize = 199usize as isize;
pub const _BITS_ENDIANNESS_H: isize = 1usize as isize;
pub const __NR_restart_syscall: isize = 219usize as isize;
pub const __NR_process_vm_readv: isize = 310usize as isize;
pub const AT_SYMLINK_NOFOLLOW: isize = 0x100usize as isize;
pub const __GLIBC__: isize = 2usize as isize;
pub const __FLT64X_EPSILON__: isize = 1usize as isize;
pub const timer_delete: SyscallWrapper = SyscallWrapper(__NR_timer_delete);
pub const __NR_vhangup: isize = 153usize as isize;
pub const __STDC_HOSTED__: isize = 1usize as isize;
pub const POSIX_MADV_WILLNEED: isize = 3usize as isize;
pub const __NR_landlock_create_ruleset: isize = 444usize as isize;
pub const SYS_poll: isize = __NR_poll;
pub const poll: SyscallWrapper = SyscallWrapper(__NR_poll);
pub const __NR_io_destroy: isize = 207usize as isize;
pub const renameat2: SyscallWrapper = SyscallWrapper(__NR_renameat2);
pub const __NR_renameat: isize = 264usize as isize;
pub const __NR_clock_getres: isize = 229usize as isize;
pub const __GNU_LIBRARY__: isize = 6usize as isize;
pub const __DBL_DIG__: isize = 15usize as isize;
pub const __FLT32_DIG__: isize = 6usize as isize;
pub const MS_ASYNC: isize = 1usize as isize;
pub const EINTR: isize = 4usize as isize;
pub const __RLIM_T_MATCHES_RLIM64_T: isize = 1usize as isize;
pub const __FLT_EPSILON__: isize = 1usize as isize;
pub const __NR_mount: isize = 165usize as isize;
pub const __NR_lsetxattr: isize = 189usize as isize;
pub const __NR_pkey_mprotect: isize = 329usize as isize;
pub const time: SyscallWrapper = SyscallWrapper(__NR_time);
pub const ENOLINK: isize = 67usize as isize;
pub const __NR_inotify_init: isize = 253usize as isize;
pub const ECHILD: isize = 10usize as isize;
pub const __SHRT_WIDTH__: isize = 16usize as isize;
pub const SYS_prctl: isize = __NR_prctl;
pub const prctl: SyscallWrapper = SyscallWrapper(__NR_prctl);
pub const __FLT32_IS_IEC_60559__: isize = 2usize as isize;
pub const lookup_dcookie: SyscallWrapper = SyscallWrapper(__NR_lookup_dcookie);
pub const __NR_fgetxattr: isize = 193usize as isize;
pub const __NR_wait4: isize = 61usize as isize;
pub const pidfd_getfd: SyscallWrapper = SyscallWrapper(__NR_pidfd_getfd);
pub const SYS_fgetxattr: isize = __NR_fgetxattr;
pub const fgetxattr: SyscallWrapper = SyscallWrapper(__NR_fgetxattr);
pub const POSIX_MADV_DONTNEED: isize = 4usize as isize;
pub const __LDBL_MIN__: isize = 3usize as isize;
pub const __STDC_UTF_16__: isize = 1usize as isize;
pub const __DBL_IS_IEC_60559__: isize = 2usize as isize;
pub const getitimer: SyscallWrapper = SyscallWrapper(__NR_getitimer);
pub const epoll_create1: SyscallWrapper = SyscallWrapper(__NR_epoll_create1);
pub const __DEC32_MAX__: isize = 9usize as isize;
pub const SYS_getpgid: isize = __NR_getpgid;
pub const getpgid: SyscallWrapper = SyscallWrapper(__NR_getpgid);
pub const __O_LARGEFILE: isize = 0usize as isize;
pub const AT_SYMLINK_FOLLOW: isize = 0x400usize as isize;
pub const MADV_REMOVE: isize = 9usize as isize;
pub const __FLT64X_DENORM_MIN__: isize = 3usize as isize;
pub const SYS_lsetxattr: isize = __NR_lsetxattr;
pub const lsetxattr: SyscallWrapper = SyscallWrapper(__NR_lsetxattr);
pub const __NR_clone: isize = 56usize as isize;
pub const __F_SETOWN: isize = 8usize as isize;
pub const EPERM: isize = 1usize as isize;
pub const __FLT32X_HAS_INFINITY__: isize = 1usize as isize;
pub const __INT32_MAX__: isize = 0x7fffffffusize as isize;
pub const SYS_statx: isize = __NR_statx;
pub const statx: SyscallWrapper = SyscallWrapper(__NR_statx);
pub const __GLIBC_USE_DEPRECATED_GETS: isize = 0usize as isize;
pub const __FLT16_DIG__: isize = 3usize as isize;
pub const __unix__: isize = 1usize as isize;
pub const __NR_kexec_file_load: isize = 320usize as isize;
pub const __INT_WIDTH__: isize = 32usize as isize;
pub const __SIZEOF_LONG__: isize = 8usize as isize;
pub const __NR_mount_setattr: isize = 442usize as isize;
pub const __S_IFCHR: isize = 0020000usize as isize;
pub const O_ASYNC: isize = 020000usize as isize;
pub const __NR_select: isize = 23usize as isize;
pub const __STDC_IEC_559__: isize = 1usize as isize;
pub const __STDC_ISO_10646__: isize = 201706usize as isize;
pub const __NR_semtimedop: isize = 220usize as isize;
pub const __NR_syslog: isize = 103usize as isize;
pub const ELOOP: isize = 40usize as isize;
pub const MAP_PRIVATE: isize = 0x02usize as isize;
pub const __DECIMAL_DIG__: isize = 21usize as isize;
pub const __USE_FORTIFY_LEVEL: isize = 0usize as isize;
pub const __STDC_IEC_559_COMPLEX__: isize = 1usize as isize;
pub const LOCK_EX: isize = 2usize as isize;
pub const __NR_getresuid: isize = 118usize as isize;
pub const MAP_TYPE: isize = 0x0fusize as isize;
pub const F_DUPFD: isize = 0usize as isize;
pub const __FLT64_EPSILON__: isize = 2usize as isize;
pub const __gnu_linux__: isize = 1usize as isize;
pub const __NR_fsync: isize = 74usize as isize;
pub const __NR_close: isize = 3usize as isize;
pub const __FLT128_IS_IEC_60559__: isize = 2usize as isize;
pub const ESTALE: isize = 116usize as isize;
pub const ENOTSOCK: isize = 88usize as isize;
pub const SYS_quotactl: isize = __NR_quotactl;
pub const quotactl: SyscallWrapper = SyscallWrapper(__NR_quotactl);
pub const SYS_fanotify_init: isize = __NR_fanotify_init;
pub const fanotify_init: SyscallWrapper = SyscallWrapper(__NR_fanotify_init);
pub const process_madvise: SyscallWrapper = SyscallWrapper(__NR_process_madvise);
pub const getpgrp: SyscallWrapper = SyscallWrapper(__NR_getpgrp);
pub const __LDBL_HAS_QUIET_NAN__: isize = 1usize as isize;
pub const ENOSR: isize = 63usize as isize;
pub const __USE_ISOC11: isize = 1usize as isize;
pub const MADV_NORMAL: isize = 0usize as isize;
pub const __NR_sendfile: isize = 40usize as isize;
pub const __NR_getdents: isize = 78usize as isize;
pub const __NR_ftruncate: isize = 77usize as isize;
pub const __FLT64_MANT_DIG__: isize = 53usize as isize;
pub const linkat: SyscallWrapper = SyscallWrapper(__NR_linkat);
pub const recvfrom: SyscallWrapper = SyscallWrapper(__NR_recvfrom);
pub const SYS_mount: isize = __NR_mount;
pub const mount: SyscallWrapper = SyscallWrapper(__NR_mount);
pub const __FLT64X_MANT_DIG__: isize = 64usize as isize;
pub const __NR_munmap: isize = 11usize as isize;
pub const SYS_wait4: isize = __NR_wait4;
pub const wait4: SyscallWrapper = SyscallWrapper(__NR_wait4);
pub const __GNUC__: isize = 12usize as isize;
pub const MADV_WIPEONFORK: isize = 18usize as isize;
pub const __pie__: isize = 2usize as isize;
pub const __MMX__: isize = 1usize as isize;
pub const __NR_memfd_secret: isize = 447usize as isize;
pub const keyctl: SyscallWrapper = SyscallWrapper(__NR_keyctl);
pub const SYS_memfd_secret: isize = __NR_memfd_secret;
pub const memfd_secret: SyscallWrapper = SyscallWrapper(__NR_memfd_secret);
pub const sched_getparam: SyscallWrapper = SyscallWrapper(__NR_sched_getparam);
pub const __FLT_HAS_DENORM__: isize = 1usize as isize;
pub const __SIZEOF_LONG_DOUBLE__: isize = 16usize as isize;
pub const MCL_ONFAULT: isize = 4usize as isize;
pub const PROT_EXEC: isize = 0x4usize as isize;
pub const POSIX_FADV_WILLNEED: isize = 3usize as isize;
pub const __NR_madvise: isize = 28usize as isize;
pub const LOCK_NB: isize = 4usize as isize;
pub const __NR_mbind: isize = 237usize as isize;
pub const __NR_unlinkat: isize = 263usize as isize;
pub const SYS_clone: isize = __NR_clone;
pub const clone: SyscallWrapper = SyscallWrapper(__NR_clone);
pub const __NR_pivot_root: isize = 155usize as isize;
pub const getpriority: SyscallWrapper = SyscallWrapper(__NR_getpriority);
pub const __NR_recvmsg: isize = 47usize as isize;
pub const __NR_socketpair: isize = 53usize as isize;
pub const SEEK_CUR: isize = 1usize as isize;
pub const ELNRNG: isize = 48usize as isize;
pub const __BIGGEST_ALIGNMENT__: isize = 16usize as isize;
pub const __NR_write: isize = 1usize as isize;
pub const kexec_load: SyscallWrapper = SyscallWrapper(__NR_kexec_load);
pub const process_mrelease: SyscallWrapper = SyscallWrapper(__NR_process_mrelease);
pub const __GLIBC_USE_DEPRECATED_SCANF: isize = 0usize as isize;
pub const __FLT64_MAX_10_EXP__: isize = 308usize as isize;
pub const __USE_ISOC95: isize = 1usize as isize;
pub const __USE_ISOC99: isize = 1usize as isize;
pub const io_uring_setup: SyscallWrapper = SyscallWrapper(__NR_io_uring_setup);
pub const __FLT16_MAX_10_EXP__: isize = 4usize as isize;
pub const uselib: SyscallWrapper = SyscallWrapper(__NR_uselib);
pub const __NR_clock_adjtime: isize = 305usize as isize;
pub const LOCK_SH: isize = 1usize as isize;
pub const _SYS_MMAN_H: isize = 1usize as isize;
pub const __INT_FAST32_MAX__: isize = 0x7fffffffffffffffusize as isize;
pub const __DBL_HAS_INFINITY__: isize = 1usize as isize;
pub const SYS_fsync: isize = __NR_fsync;
pub const fsync: SyscallWrapper = SyscallWrapper(__NR_fsync);
pub const SYS_close: isize = __NR_close;
pub const close: SyscallWrapper = SyscallWrapper(__NR_close);
pub const __NR_pidfd_getfd: isize = 438usize as isize;
pub const __SIZEOF_FLOAT__: isize = 4usize as isize;
pub const __NR_unshare: isize = 272usize as isize;
pub const __NR_io_setup: isize = 206usize as isize;
pub const getrusage: SyscallWrapper = SyscallWrapper(__NR_getrusage);
pub const __USE_XOPEN2K: isize = 1usize as isize;
pub const LOCK_UN: isize = 8usize as isize;
pub const clock_settime: SyscallWrapper = SyscallWrapper(__NR_clock_settime);
pub const __HAVE_SPECULATION_SAFE_VALUE: isize = 1usize as isize;
pub const chmod: SyscallWrapper = SyscallWrapper(__NR_chmod);
pub const __NR_getgroups: isize = 115usize as isize;
pub const setgid: SyscallWrapper = SyscallWrapper(__NR_setgid);
pub const _sysctl: SyscallWrapper = SyscallWrapper(__NR__sysctl);
pub const __INTPTR_WIDTH__: isize = 64usize as isize;
pub const __FLT64X_HAS_INFINITY__: isize = 1usize as isize;
pub const EPIPE: isize = 32usize as isize;
pub const __UINT_LEAST32_MAX__: isize = 0xffffffffusize as isize;
pub const __NR_ioprio_set: isize = 251usize as isize;
pub const __FD_SETSIZE: isize = 1024usize as isize;
pub const MS_SYNC: isize = 4usize as isize;
pub const __FLT32X_HAS_DENORM__: isize = 1usize as isize;
pub const POSIX_MADV_NORMAL: isize = 0usize as isize;
pub const pwrite64: SyscallWrapper = SyscallWrapper(__NR_pwrite64);
pub const __MMX_WITH_SSE__: isize = 1usize as isize;
pub const getsockname: SyscallWrapper = SyscallWrapper(__NR_getsockname);
pub const __INO_T_MATCHES_INO64_T: isize = 1usize as isize;
pub const EBADMSG: isize = 74usize as isize;
pub const __NR_times: isize = 100usize as isize;
pub const __USE_POSIX199506: isize = 1usize as isize;
pub const _FEATURES_H: isize = 1usize as isize;
pub const set_robust_list: SyscallWrapper = SyscallWrapper(__NR_set_robust_list);
pub const __LDBL_HAS_DENORM__: isize = 1usize as isize;
pub const __NR_getitimer: isize = 36usize as isize;
pub const __NR_set_thread_area: isize = 205usize as isize;
pub const __SEG_GS: isize = 1usize as isize;
pub const __FLT128_HAS_INFINITY__: isize = 1usize as isize;
pub const __NR_landlock_add_rule: isize = 445usize as isize;
pub const faccessat2: SyscallWrapper = SyscallWrapper(__NR_faccessat2);
pub const SYS_mbind: isize = __NR_mbind;
pub const mbind: SyscallWrapper = SyscallWrapper(__NR_mbind);
pub const __O_DSYNC: isize = 010000usize as isize;
pub const POSIX_FADV_NORMAL: isize = 0usize as isize;
pub const __DEC32_MIN__: isize = 1usize as isize;
pub const __NR_truncate: isize = 76usize as isize;
pub const S_IFCHR: isize = __S_IFCHR;
pub const setfsuid: SyscallWrapper = SyscallWrapper(__NR_setfsuid);
pub const __NR_getuid: isize = 102usize as isize;
pub const EBFONT: isize = 59usize as isize;
pub const __NR_setresgid: isize = 119usize as isize;
pub const getpid: SyscallWrapper = SyscallWrapper(__NR_getpid);
pub const SYS_write: isize = __NR_write;
pub const write: SyscallWrapper = SyscallWrapper(__NR_write);
pub const SYS_get_mempolicy: isize = __NR_get_mempolicy;
pub const get_mempolicy: SyscallWrapper = SyscallWrapper(__NR_get_mempolicy);
pub const sched_getscheduler: SyscallWrapper = SyscallWrapper(__NR_sched_getscheduler);
pub const mlock2: SyscallWrapper = SyscallWrapper(__NR_mlock2);
pub const __DBL_MAX_EXP__: isize = 1024usize as isize;
pub const __GLIBC_LINUX_VERSION_CODE: isize = 393472usize as isize;
pub const setsockopt: SyscallWrapper = SyscallWrapper(__NR_setsockopt);
pub const __WCHAR_WIDTH__: isize = 32usize as isize;
pub const MAP_LOCKED: isize = 0x02000usize as isize;
pub const __FLT32_MAX__: isize = 3usize as isize;
pub const __DEC128_EPSILON__: isize = 1usize as isize;
pub const lseek: SyscallWrapper = SyscallWrapper(__NR_lseek);
pub const ERFKILL: isize = 132usize as isize;
pub const __FLT16_DECIMAL_DIG__: isize = 5usize as isize;
pub const __SSE2_MATH__: isize = 1usize as isize;
pub const __ATOMIC_HLE_RELEASE: isize = 131072usize as isize;
pub const EREMOTE: isize = 66usize as isize;
pub const mlockall: SyscallWrapper = SyscallWrapper(__NR_mlockall);
pub const __NR_rt_sigtimedwait: isize = 128usize as isize;
pub const __PTRDIFF_MAX__: isize = 0x7fffffffffffffffusize as isize;
pub const ETOOMANYREFS: isize = 109usize as isize;
pub const EPFNOSUPPORT: isize = 96usize as isize;
pub const __amd64: isize = 1usize as isize;
pub const __SYSCALL_WORDSIZE: isize = 64usize as isize;
pub const MADV_KEEPONFORK: isize = 19usize as isize;
pub const __NR_pread64: isize = 17usize as isize;
pub const memfd_create: SyscallWrapper = SyscallWrapper(__NR_memfd_create);
pub const SYS_sched_getaffinity: isize = __NR_sched_getaffinity;
pub const sched_getaffinity: SyscallWrapper = SyscallWrapper(__NR_sched_getaffinity);
pub const __NR_reboot: isize = 169usize as isize;
pub const __NR_dup: isize = 32usize as isize;
pub const __NR_process_mrelease: isize = 448usize as isize;
pub const create_module: SyscallWrapper = SyscallWrapper(__NR_create_module);
pub const __NR_signalfd: isize = 282usize as isize;
pub const clone3: SyscallWrapper = SyscallWrapper(__NR_clone3);
pub const ENONET: isize = 64usize as isize;
pub const __ATOMIC_HLE_ACQUIRE: isize = 65536usize as isize;
pub const setxattr: SyscallWrapper = SyscallWrapper(__NR_setxattr);
pub const add_key: SyscallWrapper = SyscallWrapper(__NR_add_key);
pub const __S_IFREG: isize = 0100000usize as isize;
pub const __NR_msgctl: isize = 71usize as isize;
pub const writev: SyscallWrapper = SyscallWrapper(__NR_writev);
pub const __LONG_LONG_MAX__: isize = 0x7fffffffffffffffusize as isize;
pub const EBADSLT: isize = 57usize as isize;
pub const __SIZEOF_SIZE_T__: isize = 8usize as isize;
pub const O_NONBLOCK: isize = 04000usize as isize;
pub const exit: SyscallWrapper = SyscallWrapper(__NR_exit);
pub const rt_tgsigqueueinfo: SyscallWrapper = SyscallWrapper(__NR_rt_tgsigqueueinfo);
pub const __NR_mprotect: isize = 10usize as isize;
pub const O_APPEND: isize = 02000usize as isize;
pub const __NR_statfs: isize = 137usize as isize;
pub const SYS_name_to_handle_at: isize = __NR_name_to_handle_at;
pub const name_to_handle_at: SyscallWrapper = SyscallWrapper(__NR_name_to_handle_at);
pub const __NR_getpriority: isize = 140usize as isize;
pub const __NR_rt_sigaction: isize = 13usize as isize;
pub const __SIZEOF_WINT_T__: isize = 4usize as isize;
pub const __NR_mq_open: isize = 240usize as isize;
pub const epoll_wait: SyscallWrapper = SyscallWrapper(__NR_epoll_wait);
pub const __NR_timer_delete: isize = 226usize as isize;
pub const symlinkat: SyscallWrapper = SyscallWrapper(__NR_symlinkat);
pub const ENOTNAM: isize = 118usize as isize;
pub const __LONG_LONG_WIDTH__: isize = 64usize as isize;
pub const SYS_removexattr: isize = __NR_removexattr;
pub const removexattr: SyscallWrapper = SyscallWrapper(__NR_removexattr);
pub const SYS_times: isize = __NR_times;
pub const times: SyscallWrapper = SyscallWrapper(__NR_times);
pub const SYS_connect: isize = __NR_connect;
pub const connect: SyscallWrapper = SyscallWrapper(__NR_connect);
pub const SYS_pkey_mprotect: isize = __NR_pkey_mprotect;
pub const pkey_mprotect: SyscallWrapper = SyscallWrapper(__NR_pkey_mprotect);
pub const __FLT32_MAX_EXP__: isize = 128usize as isize;
pub const __NR_lstat: isize = 6usize as isize;
pub const MADV_DODUMP: isize = 17usize as isize;
pub const __NR_mremap: isize = 25usize as isize;
pub const SYS_rt_sigqueueinfo: isize = __NR_rt_sigqueueinfo;
pub const rt_sigqueueinfo: SyscallWrapper = SyscallWrapper(__NR_rt_sigqueueinfo);
pub const __NR_shutdown: isize = 48usize as isize;
pub const __GXX_ABI_VERSION: isize = 1017usize as isize;
pub const __NR_epoll_create1: isize = 291usize as isize;
pub const __NR_pidfd_open: isize = 434usize as isize;
pub const landlock_restrict_self: SyscallWrapper = SyscallWrapper(__NR_landlock_restrict_self);
pub const SYS_mkdirat: isize = __NR_mkdirat;
pub const mkdirat: SyscallWrapper = SyscallWrapper(__NR_mkdirat);
pub const sendto: SyscallWrapper = SyscallWrapper(__NR_sendto);
pub const F_UNLCK: isize = 2usize as isize;
pub const PROT_WRITE: isize = 0x2usize as isize;
pub const __GCC_HAVE_DWARF2_CFI_ASM: isize = 1usize as isize;
pub const seccomp: SyscallWrapper = SyscallWrapper(__NR_seccomp);
pub const F_SHLCK: isize = 8usize as isize;
pub const __NR_chroot: isize = 161usize as isize;
pub const ELIBEXEC: isize = 83usize as isize;
pub const __NR_lgetxattr: isize = 192usize as isize;
pub const __NR_msgget: isize = 68usize as isize;
pub const __INT16_MAX__: isize = 0x7fffusize as isize;
pub const __NR_preadv: isize = 295usize as isize;
pub const __x86_64: isize = 1usize as isize;
pub const utimensat: SyscallWrapper = SyscallWrapper(__NR_utimensat);
pub const EKEYREJECTED: isize = 129usize as isize;
pub const ENOCSI: isize = 50usize as isize;
pub const __NR_msgrcv: isize = 70usize as isize;
pub const MCL_FUTURE: isize = 2usize as isize;
pub const FASYNC: isize = O_ASYNC;
pub const F_GETFD: isize = 1usize as isize;
pub const __NR_getresgid: isize = 120usize as isize;
pub const F_GETFL: isize = 3usize as isize;
pub const __NR_open_tree: isize = 428usize as isize;
pub const recvmmsg: SyscallWrapper = SyscallWrapper(__NR_recvmmsg);
pub const MAP_STACK: isize = 0x20000usize as isize;
pub const eventfd2: SyscallWrapper = SyscallWrapper(__NR_eventfd2);
pub const SYS_swapoff: isize = __NR_swapoff;
pub const swapoff: SyscallWrapper = SyscallWrapper(__NR_swapoff);
pub const ENOTEMPTY: isize = 39usize as isize;
pub const __NR_pselect6: isize = 270usize as isize;
pub const __FLT64_DENORM_MIN__: isize = 4usize as isize;
pub const EADDRINUSE: isize = 98usize as isize;
pub const __NR_getsockname: isize = 51usize as isize;
pub const SYS_landlock_create_ruleset: isize = __NR_landlock_create_ruleset;
pub const landlock_create_ruleset: SyscallWrapper = SyscallWrapper(__NR_landlock_create_ruleset);
pub const __FLT16_DENORM_MIN__: isize = 5usize as isize;
pub const __FLT128_EPSILON__: isize = 1usize as isize;
pub const __FLT64X_NORM_MAX__: isize = 1usize as isize;
pub const __SIZEOF_POINTER__: isize = 8usize as isize;
pub const set_mempolicy: SyscallWrapper = SyscallWrapper(__NR_set_mempolicy);
pub const __NR_eventfd: isize = 284usize as isize;
pub const __O_DIRECTORY: isize = 0200000usize as isize;
pub const __NR_rt_tgsigqueueinfo: isize = 297usize as isize;
pub const __LP64__: isize = 1usize as isize;
pub const __DBL_HAS_QUIET_NAN__: isize = 1usize as isize;
pub const ENETRESET: isize = 102usize as isize;
pub const fstatfs: SyscallWrapper = SyscallWrapper(__NR_fstatfs);
pub const SYS_set_tid_address: isize = __NR_set_tid_address;
pub const set_tid_address: SyscallWrapper = SyscallWrapper(__NR_set_tid_address);
pub const __time_t_defined: isize = 1usize as isize;
pub const __FLT32X_EPSILON__: isize = 2usize as isize;
pub const clock_gettime: SyscallWrapper = SyscallWrapper(__NR_clock_gettime);
pub const F_SETLKW64: isize = 7usize as isize;
pub const __NR_vserver: isize = 236usize as isize;
pub const F_GETLK: isize = 5usize as isize;
pub const __NR_sched_get_priority_max: isize = 146usize as isize;
pub const EISDIR: isize = 21usize as isize;
pub const S_IFREG: isize = __S_IFREG;
pub const __DECIMAL_BID_FORMAT__: isize = 1usize as isize;
pub const _BITS_STRUCT_STAT_H: isize = 1usize as isize;
pub const __NR_getcpu: isize = 309usize as isize;
pub const copy_file_range: SyscallWrapper = SyscallWrapper(__NR_copy_file_range);
pub const getsid: SyscallWrapper = SyscallWrapper(__NR_getsid);
pub const O_DSYNC: isize = __O_DSYNC;
pub const readahead: SyscallWrapper = SyscallWrapper(__NR_readahead);
pub const __NR_pipe2: isize = 293usize as isize;
pub const __NR_acct: isize = 163usize as isize;
pub const __NR_afs_syscall: isize = 183usize as isize;
pub const SYS_lstat: isize = __NR_lstat;
pub const lstat: SyscallWrapper = SyscallWrapper(__NR_lstat);
pub const MAP_SHARED_VALIDATE: isize = 0x03usize as isize;
pub const epoll_pwait2: SyscallWrapper = SyscallWrapper(__NR_epoll_pwait2);
pub const MAP_NORESERVE: isize = 0x04000usize as isize;
pub const rename: SyscallWrapper = SyscallWrapper(__NR_rename);
pub const __NR_fchdir: isize = 81usize as isize;
pub const __NR_chown: isize = 92usize as isize;
pub const io_cancel: SyscallWrapper = SyscallWrapper(__NR_io_cancel);
pub const __NR_security: isize = 185usize as isize;
pub const __NR_putpmsg: isize = 182usize as isize;
pub const MADV_HWPOISON: isize = 100usize as isize;
pub const __FLT64X_DECIMAL_DIG__: isize = 21usize as isize;
pub const __DEC128_MIN__: isize = 1usize as isize;
pub const __NR_mlock: isize = 149usize as isize;
pub const __UINT16_MAX__: isize = 0xffffusize as isize;
pub const __DBL_HAS_DENORM__: isize = 1usize as isize;
pub const __NR_sched_getparam: isize = 143usize as isize;
pub const F_WRLCK: isize = 1usize as isize;
pub const EIDRM: isize = 43usize as isize;
pub const ECOMM: isize = 70usize as isize;
pub const __NR_mmap: isize = 9usize as isize;
pub const MADV_DONTDUMP: isize = 16usize as isize;
pub const __LDBL_HAS_INFINITY__: isize = 1usize as isize;
pub const __NR_create_module: isize = 174usize as isize;
pub const SYS_get_kernel_syms: isize = __NR_get_kernel_syms;
pub const get_kernel_syms: SyscallWrapper = SyscallWrapper(__NR_get_kernel_syms);
pub const setreuid: SyscallWrapper = SyscallWrapper(__NR_setreuid);
pub const __NR_preadv2: isize = 327usize as isize;
pub const __NR_pwrite64: isize = 18usize as isize;
pub const __NR_utimes: isize = 235usize as isize;
pub const unlink: SyscallWrapper = SyscallWrapper(__NR_unlink);
pub const __FLT32_MIN__: isize = 1usize as isize;
pub const fsetxattr: SyscallWrapper = SyscallWrapper(__NR_fsetxattr);
pub const __NR_getcwd: isize = 79usize as isize;
pub const __FLT_DIG__: isize = 6usize as isize;
pub const __NO_INLINE__: isize = 1usize as isize;
pub const sched_get_priority_min: SyscallWrapper = SyscallWrapper(__NR_sched_get_priority_min);
pub const io_pgetevents: SyscallWrapper = SyscallWrapper(__NR_io_pgetevents);
pub const __NR_sched_get_priority_min: isize = 147usize as isize;
pub const O_EXCL: isize = 0200usize as isize;
pub const SYS_io_uring_enter: isize = __NR_io_uring_enter;
pub const io_uring_enter: SyscallWrapper = SyscallWrapper(__NR_io_uring_enter);
pub const SYS_io_submit: isize = __NR_io_submit;
pub const io_submit: SyscallWrapper = SyscallWrapper(__NR_io_submit);
pub const __DEC_EVAL_METHOD__: isize = 2usize as isize;
pub const __NR_readlinkat: isize = 267usize as isize;
pub const __DEC128_MAX__: isize = 9usize as isize;
pub const ECONNABORTED: isize = 103usize as isize;
pub const __NR_rt_sigprocmask: isize = 14usize as isize;
pub const _SYSCALL_H: isize = 1usize as isize;
pub const __FLT_MANT_DIG__: isize = 24usize as isize;
pub const __LDBL_DECIMAL_DIG__: isize = 21usize as isize;
pub const sched_getattr: SyscallWrapper = SyscallWrapper(__NR_sched_getattr);
pub const __NR_fspick: isize = 433usize as isize;
pub const _SYS_CDEFS_H: isize = 1usize as isize;
pub const __NR_clock_settime: isize = 227usize as isize;
pub const setgroups: SyscallWrapper = SyscallWrapper(__NR_setgroups);
pub const __NR_bind: isize = 49usize as isize;
pub const _STDC_PREDEF_H: isize = 1usize as isize;
pub const SYS_membarrier: isize = __NR_membarrier;
pub const membarrier: SyscallWrapper = SyscallWrapper(__NR_membarrier);
pub const __NR_mlockall: isize = 151usize as isize;
pub const __NR_sched_yield: isize = 24usize as isize;
pub const fchownat: SyscallWrapper = SyscallWrapper(__NR_fchownat);
pub const getsockopt: SyscallWrapper = SyscallWrapper(__NR_getsockopt);
pub const __USE_XOPEN2K8: isize = 1usize as isize;
pub const __NR_access: isize = 21usize as isize;
pub const __NR_munlock: isize = 150usize as isize;
pub const __NR_dup2: isize = 33usize as isize;
pub const __NR_dup3: isize = 292usize as isize;
pub const __NR_pipe: isize = 22usize as isize;
pub const O_RDWR: isize = 02usize as isize;
pub const __INT_LEAST32_MAX__: isize = 0x7fffffffusize as isize;
pub const SYS_pipe2: isize = __NR_pipe2;
pub const pipe2: SyscallWrapper = SyscallWrapper(__NR_pipe2);
pub const __NR_sysfs: isize = 139usize as isize;
pub const __GCC_ATOMIC_INT_LOCK_FREE: isize = 2usize as isize;
pub const EHOSTUNREACH: isize = 113usize as isize;
pub const __F_GETOWN: isize = 9usize as isize;
pub const sched_setscheduler: SyscallWrapper = SyscallWrapper(__NR_sched_setscheduler);
pub const SYS_sched_yield: isize = __NR_sched_yield;
pub const sched_yield: SyscallWrapper = SyscallWrapper(__NR_sched_yield);
pub const fadvise64: SyscallWrapper = SyscallWrapper(__NR_fadvise64);
pub const __FLT128_MAX_EXP__: isize = 16384usize as isize;
pub const tee: SyscallWrapper = SyscallWrapper(__NR_tee);
pub const __NR_setuid: isize = 105usize as isize;
pub const __F_SETOWN_EX: isize = 15usize as isize;
pub const F_ULOCK: isize = 0usize as isize;
pub const SYS_setfsgid: isize = __NR_setfsgid;
pub const setfsgid: SyscallWrapper = SyscallWrapper(__NR_setfsgid);
pub const __NR_getgid: isize = 104usize as isize;
pub const EBADFD: isize = 77usize as isize;
pub const SYS_mlock: isize = __NR_mlock;
pub const mlock: SyscallWrapper = SyscallWrapper(__NR_mlock);
pub const umask: SyscallWrapper = SyscallWrapper(__NR_umask);
pub const __FLT32_MANT_DIG__: isize = 24usize as isize;
pub const EL3HLT: isize = 46usize as isize;
pub const rmdir: SyscallWrapper = SyscallWrapper(__NR_rmdir);
pub const __NR_getpmsg: isize = 181usize as isize;
pub const __NR_llistxattr: isize = 195usize as isize;
pub const __FLOAT_WORD_ORDER__: isize = __ORDER_LITTLE_ENDIAN__;
pub const SYS_perf_event_open: isize = __NR_perf_event_open;
pub const perf_event_open: SyscallWrapper = SyscallWrapper(__NR_perf_event_open);
pub const __NR_seccomp: isize = 317usize as isize;
pub const __NR_readlink: isize = 89usize as isize;
pub const FD_CLOEXEC: isize = 1usize as isize;
pub const __S_IFDIR: isize = 0040000usize as isize;
pub const SYS_acct: isize = __NR_acct;
pub const acct: SyscallWrapper = SyscallWrapper(__NR_acct);
pub const SYS_sysinfo: isize = __NR_sysinfo;
pub const sysinfo: SyscallWrapper = SyscallWrapper(__NR_sysinfo);
pub const __NR_fchmodat: isize = 268usize as isize;
pub const __NR_accept4: isize = 288usize as isize;
pub const MAP_HUGE_SHIFT: isize = 26usize as isize;
pub const __NR_fchown: isize = 93usize as isize;
pub const modify_ldt: SyscallWrapper = SyscallWrapper(__NR_modify_ldt);
pub const __NR_stat: isize = 4usize as isize;
pub const O_DIRECTORY: isize = __O_DIRECTORY;
pub const open_by_handle_at: SyscallWrapper = SyscallWrapper(__NR_open_by_handle_at);
pub const __NR_execve: isize = 59usize as isize;
pub const __NR_vmsplice: isize = 278usize as isize;
pub const SYS_sched_setparam: isize = __NR_sched_setparam;
pub const sched_setparam: SyscallWrapper = SyscallWrapper(__NR_sched_setparam);
pub const SYS_inotify_add_watch: isize = __NR_inotify_add_watch;
pub const inotify_add_watch: SyscallWrapper = SyscallWrapper(__NR_inotify_add_watch);
pub const __STDC_IEC_60559_COMPLEX__: isize = 201404usize as isize;
pub const __NR_sched_setattr: isize = 314usize as isize;
pub const __NR_splice: isize = 275usize as isize;
pub const __FLT128_HAS_DENORM__: isize = 1usize as isize;
pub const F_SETFL: isize = 4usize as isize;
pub const SYS_mmap: isize = __NR_mmap;
pub const mmap: SyscallWrapper = SyscallWrapper(__NR_mmap);
pub const __FLT32_DECIMAL_DIG__: isize = 9usize as isize;
pub const __NR_umask: isize = 95usize as isize;
pub const __FLT128_DIG__: isize = 33usize as isize;
pub const __DEC64_EPSILON__: isize = 1usize as isize;
pub const SYS_ioprio_set: isize = __NR_ioprio_set;
pub const ioprio_set: SyscallWrapper = SyscallWrapper(__NR_ioprio_set);
pub const __NR_open_by_handle_at: isize = 304usize as isize;
pub const __ORDER_PDP_ENDIAN__: isize = 3412usize as isize;
pub const __PDP_ENDIAN: isize = 3412usize as isize;
pub const __NR_futimesat: isize = 261usize as isize;
pub const EL2HLT: isize = 51usize as isize;
pub const SYS_restart_syscall: isize = __NR_restart_syscall;
pub const restart_syscall: SyscallWrapper = SyscallWrapper(__NR_restart_syscall);
pub const ptrace: SyscallWrapper = SyscallWrapper(__NR_ptrace);
pub const ENOKEY: isize = 126usize as isize;
pub const shmctl: SyscallWrapper = SyscallWrapper(__NR_shmctl);
pub const SYS_setresuid: isize = __NR_setresuid;
pub const setresuid: SyscallWrapper = SyscallWrapper(__NR_setresuid);
pub const _BITS_TYPESIZES_H: isize = 1usize as isize;
pub const __NR_fcntl: isize = 72usize as isize;
pub const SYS_signalfd: isize = __NR_signalfd;
pub const signalfd: SyscallWrapper = SyscallWrapper(__NR_signalfd);
pub const brk: SyscallWrapper = SyscallWrapper(__NR_brk);
pub const SYS_sched_get_priority_max: isize = __NR_sched_get_priority_max;
pub const sched_get_priority_max: SyscallWrapper = SyscallWrapper(__NR_sched_get_priority_max);
pub const MADV_DONTFORK: isize = 10usize as isize;
pub const O_RDONLY: isize = 00usize as isize;
pub const EINVAL: isize = 22usize as isize;
pub const F_OK: isize = 0usize as isize;
pub const SYS_getgroups: isize = __NR_getgroups;
pub const getgroups: SyscallWrapper = SyscallWrapper(__NR_getgroups);
pub const unix: isize = 1usize as isize;
pub const __NR_rmdir: isize = 84usize as isize;
pub const __NR_getdents64: isize = 217usize as isize;
pub const sigaltstack: SyscallWrapper = SyscallWrapper(__NR_sigaltstack);
pub const SYS_nfsservctl: isize = __NR_nfsservctl;
pub const nfsservctl: SyscallWrapper = SyscallWrapper(__NR_nfsservctl);
pub const __NR_geteuid: isize = 107usize as isize;
pub const ESHUTDOWN: isize = 108usize as isize;
pub const F_GETOWN: isize = __F_GETOWN;
pub const __NR_alarm: isize = 37usize as isize;
pub const SYS_getdents64: isize = __NR_getdents64;
pub const getdents64: SyscallWrapper = SyscallWrapper(__NR_getdents64);
pub const F_SETLK: isize = 6usize as isize;
pub const __NR_futex: isize = 202usize as isize;
pub const SYS_io_destroy: isize = __NR_io_destroy;
pub const io_destroy: SyscallWrapper = SyscallWrapper(__NR_io_destroy);
pub const move_mount: SyscallWrapper = SyscallWrapper(__NR_move_mount);
pub const __NR_arch_prctl: isize = 158usize as isize;
pub const SYS_pwritev: isize = __NR_pwritev;
pub const pwritev: SyscallWrapper = SyscallWrapper(__NR_pwritev);
pub const SYS_unshare: isize = __NR_unshare;
pub const unshare: SyscallWrapper = SyscallWrapper(__NR_unshare);
pub const __UINT64_MAX__: isize = 0xffffffffffffffffusize as isize;
pub const __FLT_IS_IEC_60559__: isize = 2usize as isize;
pub const SYS_bind: isize = __NR_bind;
pub const bind: SyscallWrapper = SyscallWrapper(__NR_bind);
pub const SYS_getxattr: isize = __NR_getxattr;
pub const getxattr: SyscallWrapper = SyscallWrapper(__NR_getxattr);
pub const __NR_tee: isize = 276usize as isize;
pub const F_SETOWN: isize = __F_SETOWN;
pub const __FLT64X_DIG__: isize = 18usize as isize;
pub const MADV_POPULATE_READ: isize = 22usize as isize;
pub const F_SETLK64: isize = 6usize as isize;
pub const SYS_dup2: isize = __NR_dup2;
pub const dup2: SyscallWrapper = SyscallWrapper(__NR_dup2);
pub const SYS_dup3: isize = __NR_dup3;
pub const dup3: SyscallWrapper = SyscallWrapper(__NR_dup3);
pub const __NR_umount2: isize = 166usize as isize;
pub const SYS_pipe: isize = __NR_pipe;
pub const pipe: SyscallWrapper = SyscallWrapper(__NR_pipe);
pub const timer_create: SyscallWrapper = SyscallWrapper(__NR_timer_create);
pub const __ELF__: isize = 1usize as isize;
pub const SYS_rt_sigtimedwait: isize = __NR_rt_sigtimedwait;
pub const rt_sigtimedwait: SyscallWrapper = SyscallWrapper(__NR_rt_sigtimedwait);
pub const __GCC_ASM_FLAG_OUTPUTS__: isize = 1usize as isize;
pub const __NR_execveat: isize = 322usize as isize;
pub const SYS_tuxcall: isize = __NR_tuxcall;
pub const tuxcall: SyscallWrapper = SyscallWrapper(__NR_tuxcall);
pub const __F_GETOWN_EX: isize = 16usize as isize;
pub const SYS_mincore: isize = __NR_mincore;
pub const mincore: SyscallWrapper = SyscallWrapper(__NR_mincore);
pub const settimeofday: SyscallWrapper = SyscallWrapper(__NR_settimeofday);
pub const __NR_mknodat: isize = 259usize as isize;
pub const vfork: SyscallWrapper = SyscallWrapper(__NR_vfork);
pub const __NR_fork: isize = 57usize as isize;
pub const fallocate: SyscallWrapper = SyscallWrapper(__NR_fallocate);
pub const ELIBSCN: isize = 81usize as isize;
pub const F_TLOCK: isize = 2usize as isize;
pub const fstat: SyscallWrapper = SyscallWrapper(__NR_fstat);
pub const shmget: SyscallWrapper = SyscallWrapper(__NR_shmget);
pub const __NR_creat: isize = 85usize as isize;
pub const __FLT_RADIX__: isize = 2usize as isize;
pub const __NR_inotify_rm_watch: isize = 255usize as isize;
pub const __LDBL_EPSILON__: isize = 1usize as isize;
pub const O_SYNC: isize = 04010000usize as isize;
pub const fchmod: SyscallWrapper = SyscallWrapper(__NR_fchmod);
pub const _POSIX_C_SOURCE: isize = 200809usize as isize;
pub const __NR_process_vm_writev: isize = 311usize as isize;
pub const __NR_copy_file_range: isize = 326usize as isize;
pub const __SSE_MATH__: isize = 1usize as isize;
pub const __NR_sched_rr_get_interval: isize = 148usize as isize;
pub const MADV_WILLNEED: isize = 3usize as isize;
pub const ENAVAIL: isize = 119usize as isize;
pub const __NR_openat2: isize = 437usize as isize;
pub const __k8: isize = 1usize as isize;
pub const socket: SyscallWrapper = SyscallWrapper(__NR_socket);
pub const __FLT32X_MIN__: isize = 2usize as isize;
pub const SYS_kexec_file_load: isize = __NR_kexec_file_load;
pub const kexec_file_load: SyscallWrapper = SyscallWrapper(__NR_kexec_file_load);
pub const SYS_stat: isize = __NR_stat;
pub const stat: SyscallWrapper = SyscallWrapper(__NR_stat);
pub const __SIG_ATOMIC_MAX__: isize = 0x7fffffffusize as isize;
pub const F_TEST: isize = 3usize as isize;
pub const O_CLOEXEC: isize = __O_CLOEXEC;
pub const MADV_FREE: isize = 8usize as isize;
pub const faccessat: SyscallWrapper = SyscallWrapper(__NR_faccessat);
pub const __NR_set_mempolicy: isize = 238usize as isize;
pub const ENOSTR: isize = 60usize as isize;
pub const POSIX_MADV_SEQUENTIAL: isize = 2usize as isize;
pub const syncfs: SyscallWrapper = SyscallWrapper(__NR_syncfs);
pub const __GCC_ATOMIC_WCHAR_T_LOCK_FREE: isize = 2usize as isize;
pub const EOVERFLOW: isize = 75usize as isize;
pub const __STDC_IEC_60559_BFP__: isize = 201404usize as isize;
pub const S_IRUSR: isize = __S_IREAD;
pub const setsid: SyscallWrapper = SyscallWrapper(__NR_setsid);
pub const SYS_exit_group: isize = __NR_exit_group;
pub const exit_group: SyscallWrapper = SyscallWrapper(__NR_exit_group);
pub const __SIZEOF_PTRDIFF_T__: isize = 8usize as isize;
pub const SEEK_SET: isize = 0usize as isize;
pub const __NR_clock_gettime: isize = 228usize as isize;
pub const __NR_setrlimit: isize = 160usize as isize;
pub const __NR_getsockopt: isize = 55usize as isize;
pub const __NR_getppid: isize = 110usize as isize;
pub const SYS_pread64: isize = __NR_pread64;
pub const pread64: SyscallWrapper = SyscallWrapper(__NR_pread64);
pub const __NR_modify_ldt: isize = 154usize as isize;
pub const __NR_epoll_pwait2: isize = 441usize as isize;
pub const SYS_alarm: isize = __NR_alarm;
pub const alarm: SyscallWrapper = SyscallWrapper(__NR_alarm);
pub const tgkill: SyscallWrapper = SyscallWrapper(__NR_tgkill);
pub const SYS_sendmmsg: isize = __NR_sendmmsg;
pub const sendmmsg: SyscallWrapper = SyscallWrapper(__NR_sendmmsg);
pub const MADV_DONTNEED: isize = 4usize as isize;
pub const SYS_futex: isize = __NR_futex;
pub const futex: SyscallWrapper = SyscallWrapper(__NR_futex);
pub const __NR_pause: isize = 34usize as isize;
pub const bpf: SyscallWrapper = SyscallWrapper(__NR_bpf);
pub const capget: SyscallWrapper = SyscallWrapper(__NR_capget);
pub const quotactl_fd: SyscallWrapper = SyscallWrapper(__NR_quotactl_fd);
pub const EUCLEAN: isize = 117usize as isize;
pub const listxattr: SyscallWrapper = SyscallWrapper(__NR_listxattr);
pub const MADV_COLLAPSE: isize = 25usize as isize;
pub const SYS_semop: isize = __NR_semop;
pub const semop: SyscallWrapper = SyscallWrapper(__NR_semop);
pub const ENOMEDIUM: isize = 123usize as isize;
pub const __NR_linkat: isize = 265usize as isize;
pub const S_IFDIR: isize = __S_IFDIR;
pub const __USE_MISC: isize = 1usize as isize;
pub const EBUSY: isize = 16usize as isize;
pub const __LDBL_DIG__: isize = 18usize as isize;
pub const __S_IEXEC: isize = 0100usize as isize;
pub const W_OK: isize = 2usize as isize;
pub const PROT_READ: isize = 0x1usize as isize;
pub const __FLT64_IS_IEC_60559__: isize = 2usize as isize;
pub const __x86_64__: isize = 1usize as isize;
pub const SYS_pidfd_open: isize = __NR_pidfd_open;
pub const pidfd_open: SyscallWrapper = SyscallWrapper(__NR_pidfd_open);
pub const __FLT16_IS_IEC_60559__: isize = 2usize as isize;
pub const MAP_POPULATE: isize = 0x08000usize as isize;
pub const __FLT16_MAX_EXP__: isize = 16usize as isize;
pub const __DEC32_SUBNORMAL_MIN__: isize = 0usize as isize;
pub const MADV_DOFORK: isize = 11usize as isize;
pub const O_CREAT: isize = 0100usize as isize;
pub const __S_IWRITE: isize = 0200usize as isize;
pub const SYS_setrlimit: isize = __NR_setrlimit;
pub const setrlimit: SyscallWrapper = SyscallWrapper(__NR_setrlimit);
pub const EPROTO: isize = 71usize as isize;
pub const ENODEV: isize = 19usize as isize;
pub const SYS_setregid: isize = __NR_setregid;
pub const setregid: SyscallWrapper = SyscallWrapper(__NR_setregid);
pub const __NR_keyctl: isize = 250usize as isize;
pub const __INT_FAST16_MAX__: isize = 0x7fffffffffffffffusize as isize;
pub const SYS_waitid: isize = __NR_waitid;
pub const waitid: SyscallWrapper = SyscallWrapper(__NR_waitid);
pub const SYS_read: isize = __NR_read;
pub const read: SyscallWrapper = SyscallWrapper(__NR_read);
pub const SYS_execveat: isize = __NR_execveat;
pub const execveat: SyscallWrapper = SyscallWrapper(__NR_execveat);
pub const __GCC_CONSTRUCTIVE_SIZE: isize = 64usize as isize;
pub const EKEYEXPIRED: isize = 127usize as isize;
pub const __NR_pkey_alloc: isize = 330usize as isize;
pub const SYS_io_uring_register: isize = __NR_io_uring_register;
pub const io_uring_register: SyscallWrapper = SyscallWrapper(__NR_io_uring_register);
pub const __FLT64_DIG__: isize = 15usize as isize;
pub const S_ISVTX: isize = __S_ISVTX;
pub const EROFS: isize = 30usize as isize;
pub const userfaultfd: SyscallWrapper = SyscallWrapper(__NR_userfaultfd);
pub const personality: SyscallWrapper = SyscallWrapper(__NR_personality);
pub const __UINT_FAST32_MAX__: isize = 0xffffffffffffffffusize as isize;
pub const __NR_symlink: isize = 88usize as isize;
pub const __FLT16_EPSILON__: isize = 9usize as isize;
pub const __NR_iopl: isize = 172usize as isize;
pub const SYS_afs_syscall: isize = __NR_afs_syscall;
pub const afs_syscall: SyscallWrapper = SyscallWrapper(__NR_afs_syscall);
pub const __FLT_HAS_QUIET_NAN__: isize = 1usize as isize;
pub const __NR_io_pgetevents: isize = 333usize as isize;
pub const __FLT_MAX_10_EXP__: isize = 38usize as isize;
pub const __NR_getrusage: isize = 98usize as isize;
pub const SYS_semtimedop: isize = __NR_semtimedop;
pub const semtimedop: SyscallWrapper = SyscallWrapper(__NR_semtimedop);
pub const getegid: SyscallWrapper = SyscallWrapper(__NR_getegid);
pub const __NR_sched_setaffinity: isize = 203usize as isize;
pub const F_DUPFD_CLOEXEC: isize = 1030usize as isize;
pub const __glibc_c99_flexarr_available: isize = 1usize as isize;
pub const __LONG_MAX__: isize = 0x7fffffffffffffffusize as isize;
pub const PROT_GROWSUP: isize = 0x02000000usize as isize;
pub const __FLT64X_HAS_DENORM__: isize = 1usize as isize;
pub const __DEC128_SUBNORMAL_MIN__: isize = 0usize as isize;
pub const ELIBACC: isize = 79usize as isize;
pub const EHWPOISON: isize = 133usize as isize;
pub const __FLT_HAS_INFINITY__: isize = 1usize as isize;
pub const SYS_epoll_wait_old: isize = __NR_epoll_wait_old;
pub const epoll_wait_old: SyscallWrapper = SyscallWrapper(__NR_epoll_wait_old);
pub const __NR_exit: isize = 60usize as isize;
pub const __NR_sched_getattr: isize = 315usize as isize;
pub const __NR_setpgid: isize = 109usize as isize;
pub const __NR_sched_setscheduler: isize = 144usize as isize;
pub const SYS_fork: isize = __NR_fork;
pub const fork: SyscallWrapper = SyscallWrapper(__NR_fork);
pub const __DEC64_MAX__: isize = 9usize as isize;
pub const SYS_ioctl: isize = __NR_ioctl;
pub const ioctl: SyscallWrapper = SyscallWrapper(__NR_ioctl);
pub const __INT_FAST32_WIDTH__: isize = 64usize as isize;
pub const __NR_lseek: isize = 8usize as isize;
pub const __PRAGMA_REDEFINE_EXTNAME: isize = 1usize as isize;
pub const E2BIG: isize = 7usize as isize;
pub const MADV_UNMERGEABLE: isize = 13usize as isize;
pub const _BITS_ERRNO_H: isize = 1usize as isize;
pub const __NR_symlinkat: isize = 266usize as isize;
pub const __NR_signalfd4: isize = 289usize as isize;
pub const __SIZE_WIDTH__: isize = 64usize as isize;
pub const SYS_getpeername: isize = __NR_getpeername;
pub const getpeername: SyscallWrapper = SyscallWrapper(__NR_getpeername);
pub const __SEG_FS: isize = 1usize as isize;
pub const __INT_LEAST16_MAX__: isize = 0x7fffusize as isize;
pub const __FLT16_NORM_MAX__: isize = 6usize as isize;
pub const __DEC64_MANT_DIG__: isize = 16usize as isize;
pub const __INT64_MAX__: isize = 0x7fffffffffffffffusize as isize;
pub const _BITS_ENDIAN_H: isize = 1usize as isize;
pub const EDEADLK: isize = 35usize as isize;
pub const __FLT32_DENORM_MIN__: isize = 1usize as isize;
pub const __NR_setgid: isize = 106usize as isize;
pub const __SIG_ATOMIC_WIDTH__: isize = 32usize as isize;
pub const __FLT16_MAX__: isize = 6usize as isize;
pub const __STDC_VERSION__: isize = 201710usize as isize;
pub const SYS_futex_waitv: isize = __NR_futex_waitv;
pub const futex_waitv: SyscallWrapper = SyscallWrapper(__NR_futex_waitv);
pub const __SIZEOF_INT__: isize = 4usize as isize;
pub const SYS_timerfd_settime: isize = __NR_timerfd_settime;
pub const timerfd_settime: SyscallWrapper = SyscallWrapper(__NR_timerfd_settime);
pub const SYS_ioperm: isize = __NR_ioperm;
pub const ioperm: SyscallWrapper = SyscallWrapper(__NR_ioperm);
pub const __DEC32_MAX_EXP__: isize = 97usize as isize;
pub const SYS_madvise: isize = __NR_madvise;
pub const madvise: SyscallWrapper = SyscallWrapper(__NR_madvise);
pub const __INT_FAST8_MAX__: isize = 0x7fusize as isize;
pub const __FLT128_MAX__: isize = 1usize as isize;
pub const __INTPTR_MAX__: isize = 0x7fffffffffffffffusize as isize;
pub const ECONNRESET: isize = 104usize as isize;
pub const SYS_recvmsg: isize = __NR_recvmsg;
pub const recvmsg: SyscallWrapper = SyscallWrapper(__NR_recvmsg);
pub const linux: isize = 1usize as isize;
pub const __NR_utimensat: isize = 280usize as isize;
pub const __NR_move_pages: isize = 279usize as isize;
pub const ENXIO: isize = 6usize as isize;
pub const MAP_FIXED_NOREPLACE: isize = 0x100000usize as isize;
pub const SYS_getppid: isize = __NR_getppid;
pub const getppid: SyscallWrapper = SyscallWrapper(__NR_getppid);
pub const __FLT64_HAS_QUIET_NAN__: isize = 1usize as isize;
pub const __NR_sendmsg: isize = 46usize as isize;
pub const remap_file_pages: SyscallWrapper = SyscallWrapper(__NR_remap_file_pages);
pub const SYS_symlink: isize = __NR_symlink;
pub const symlink: SyscallWrapper = SyscallWrapper(__NR_symlink);
pub const SYS_set_thread_area: isize = __NR_set_thread_area;
pub const set_thread_area: SyscallWrapper = SyscallWrapper(__NR_set_thread_area);
pub const F_GETLK64: isize = 5usize as isize;
pub const MADV_DONTNEED_LOCKED: isize = 24usize as isize;
pub const EBADRQC: isize = 56usize as isize;
pub const F_SETLKW: isize = 7usize as isize;
pub const __USE_POSIX2: isize = 1usize as isize;
pub const __NR_kill: isize = 62usize as isize;
pub const getrlimit: SyscallWrapper = SyscallWrapper(__NR_getrlimit);
pub const SYS_pivot_root: isize = __NR_pivot_root;
pub const pivot_root: SyscallWrapper = SyscallWrapper(__NR_pivot_root);
pub const SYS_msgrcv: isize = __NR_msgrcv;
pub const msgrcv: SyscallWrapper = SyscallWrapper(__NR_msgrcv);
pub const __NR_mlock2: isize = 325usize as isize;
pub const FAPPEND: isize = O_APPEND;
pub const __F_SETSIG: isize = 10usize as isize;
pub const __FLT32X_DIG__: isize = 15usize as isize;
pub const __NR_ppoll: isize = 271usize as isize;
pub const SYS_iopl: isize = __NR_iopl;
pub const iopl: SyscallWrapper = SyscallWrapper(__NR_iopl);
pub const __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64: isize = 1usize as isize;
pub const __WORDSIZE: isize = 64usize as isize;
pub const __NR_mq_timedreceive: isize = 243usize as isize;
pub const __PTRDIFF_WIDTH__: isize = 64usize as isize;
pub const __LDBL_MANT_DIG__: isize = 64usize as isize;
pub const SYS_swapon: isize = __NR_swapon;
pub const swapon: SyscallWrapper = SyscallWrapper(__NR_swapon);
pub const ENAMETOOLONG: isize = 36usize as isize;
pub const __NR_fsmount: isize = 432usize as isize;
pub const MAP_FILE: isize = 0usize as isize;
pub const __NR_quotactl_fd: isize = 443usize as isize;
pub const SYS_landlock_add_rule: isize = __NR_landlock_add_rule;
pub const landlock_add_rule: SyscallWrapper = SyscallWrapper(__NR_landlock_add_rule);
pub const __FLT64_HAS_INFINITY__: isize = 1usize as isize;
pub const __FLT64X_MAX__: isize = 1usize as isize;
pub const __FLT16_HAS_INFINITY__: isize = 1usize as isize;
pub const SYS_get_robust_list: isize = __NR_get_robust_list;
pub const get_robust_list: SyscallWrapper = SyscallWrapper(__NR_get_robust_list);
pub const __NR_chmod: isize = 90usize as isize;
pub const __code_model_small__: isize = 1usize as isize;
pub const __NR_get_thread_area: isize = 211usize as isize;
pub const __NR_vfork: isize = 58usize as isize;
pub const __GCC_ATOMIC_LONG_LOCK_FREE: isize = 2usize as isize;
pub const SYS_gettid: isize = __NR_gettid;
pub const gettid: SyscallWrapper = SyscallWrapper(__NR_gettid);
pub const __DEC32_MANT_DIG__: isize = 7usize as isize;
pub const SYS_msgget: isize = __NR_msgget;
pub const msgget: SyscallWrapper = SyscallWrapper(__NR_msgget);
pub const __FLT16_MANT_DIG__: isize = 11usize as isize;
pub const __NR_clone3: isize = 435usize as isize;
pub const __NR_recvfrom: isize = 45usize as isize;
pub const ESOCKTNOSUPPORT: isize = 94usize as isize;
pub const __NR_readahead: isize = 187usize as isize;
pub const __k8__: isize = 1usize as isize;
pub const MAP_DENYWRITE: isize = 0x00800usize as isize;
pub const migrate_pages: SyscallWrapper = SyscallWrapper(__NR_migrate_pages);
pub const __NR_writev: isize = 20usize as isize;
pub const SYS_pselect6: isize = __NR_pselect6;
pub const pselect6: SyscallWrapper = SyscallWrapper(__NR_pselect6);
pub const __pic__: isize = 2usize as isize;
pub const SYS_sched_setattr: isize = __NR_sched_setattr;
pub const sched_setattr: SyscallWrapper = SyscallWrapper(__NR_sched_setattr);
pub const __NR_io_cancel: isize = 210usize as isize;
pub const __UINTPTR_MAX__: isize = 0xffffffffffffffffusize as isize;
pub const __NR_msgsnd: isize = 69usize as isize;
pub const __S_IFLNK: isize = 0120000usize as isize;
pub const __INT_FAST64_WIDTH__: isize = 64usize as isize;
pub const __NR_userfaultfd: isize = 323usize as isize;
pub const __NR_personality: isize = 135usize as isize;
pub const __NR_flistxattr: isize = 196usize as isize;
pub const __NR_ustat: isize = 136usize as isize;
pub const EDOTDOT: isize = 73usize as isize;
pub const __O_DIRECT: isize = 040000usize as isize;
pub const MADV_COLD: isize = 20usize as isize;
pub const SYS_epoll_pwait: isize = __NR_epoll_pwait;
pub const epoll_pwait: SyscallWrapper = SyscallWrapper(__NR_epoll_pwait);
pub const __USE_POSIX: isize = 1usize as isize;
pub const EADDRNOTAVAIL: isize = 99usize as isize;
pub const ETIME: isize = 62usize as isize;
pub const __INT_FAST64_MAX__: isize = 0x7fffffffffffffffusize as isize;
pub const __GCC_ATOMIC_TEST_AND_SET_TRUEVAL: isize = 1usize as isize;
pub const SYS_pidfd_send_signal: isize = __NR_pidfd_send_signal;
pub const pidfd_send_signal: SyscallWrapper = SyscallWrapper(__NR_pidfd_send_signal);
pub const __LITTLE_ENDIAN: isize = 1234usize as isize;
pub const SYS_umount2: isize = __NR_umount2;
pub const umount2: SyscallWrapper = SyscallWrapper(__NR_umount2);
pub const __NR_timer_create: isize = 222usize as isize;
pub const __FLT_NORM_MAX__: isize = 3usize as isize;
pub const __FLT32_HAS_INFINITY__: isize = 1usize as isize;
pub const __NR_msync: isize = 26usize as isize;
pub const SYS_process_vm_writev: isize = __NR_process_vm_writev;
pub const process_vm_writev: SyscallWrapper = SyscallWrapper(__NR_process_vm_writev);
pub const __FLT64X_MAX_EXP__: isize = 16384usize as isize;
pub const MAP_SYNC: isize = 0x80000usize as isize;
pub const __NR_time: isize = 201usize as isize;
pub const MAP_SHARED: isize = 0x01usize as isize;
pub const __NR_settimeofday: isize = 164usize as isize;
pub const __NR_fsetxattr: isize = 190usize as isize;
pub const SYS_semget: isize = __NR_semget;
pub const semget: SyscallWrapper = SyscallWrapper(__NR_semget);
pub const __INT_MAX__: isize = 0x7fffffffusize as isize;
pub const S_IXUSR: isize = __S_IEXEC;
pub const _FCNTL_H: isize = 1usize as isize;
pub const __NR_lookup_dcookie: isize = 212usize as isize;
pub const __linux__: isize = 1usize as isize;
pub const SYS_lchown: isize = __NR_lchown;
pub const lchown: SyscallWrapper = SyscallWrapper(__NR_lchown);
pub const __NR_sendto: isize = 44usize as isize;
pub const gettimeofday: SyscallWrapper = SyscallWrapper(__NR_gettimeofday);
pub const EPROTONOSUPPORT: isize = 93usize as isize;
pub const SYS_link: isize = __NR_link;
pub const link: SyscallWrapper = SyscallWrapper(__NR_link);
pub const __NR_rename: isize = 82usize as isize;
pub const __TIMESIZE: isize = __WORDSIZE;
pub const SYS_ppoll: isize = __NR_ppoll;
pub const ppoll: SyscallWrapper = SyscallWrapper(__NR_ppoll);
pub const ENOTRECOVERABLE: isize = 131usize as isize;
pub const __NR_readv: isize = 19usize as isize;
pub const SYS_nanosleep: isize = __NR_nanosleep;
pub const nanosleep: SyscallWrapper = SyscallWrapper(__NR_nanosleep);
pub const __NR_remap_file_pages: isize = 216usize as isize;
pub const EIO: isize = 5usize as isize;
pub const __FLT_MAX_EXP__: isize = 128usize as isize;
pub const ENETUNREACH: isize = 101usize as isize;
pub const EXDEV: isize = 18usize as isize;
pub const __NR_setgroups: isize = 116usize as isize;
pub const __ORDER_BIG_ENDIAN__: isize = 4321usize as isize;
pub const __NR_sched_getscheduler: isize = 145usize as isize;
pub const SYS_semctl: isize = __NR_semctl;
pub const semctl: SyscallWrapper = SyscallWrapper(__NR_semctl);
pub const __DBL_MANT_DIG__: isize = 53usize as isize;
pub const SYS_open_tree: isize = __NR_open_tree;
pub const open_tree: SyscallWrapper = SyscallWrapper(__NR_open_tree);
pub const timer_settime: SyscallWrapper = SyscallWrapper(__NR_timer_settime);
pub const __SIZEOF_FLOAT128__: isize = 16usize as isize;
pub const __INT_LEAST64_MAX__: isize = 0x7fffffffffffffffusize as isize;
pub const __NR_chdir: isize = 80usize as isize;
pub const __GCC_ATOMIC_CHAR16_T_LOCK_FREE: isize = 2usize as isize;
pub const SYS_kill: isize = __NR_kill;
pub const kill: SyscallWrapper = SyscallWrapper(__NR_kill);
pub const __GLIBC_MINOR__: isize = 37usize as isize;
pub const __DEC64_MIN__: isize = 1usize as isize;
pub const EDQUOT: isize = 122usize as isize;
pub const __SIZEOF_SHORT__: isize = 2usize as isize;
pub const __FLT32_NORM_MAX__: isize = 3usize as isize;
pub const __SSE__: isize = 1usize as isize;
pub const SYS_prlimit64: isize = __NR_prlimit64;
pub const prlimit64: SyscallWrapper = SyscallWrapper(__NR_prlimit64);
pub const fanotify_mark: SyscallWrapper = SyscallWrapper(__NR_fanotify_mark);
pub const MADV_PAGEOUT: isize = 21usize as isize;
pub const timer_getoverrun: SyscallWrapper = SyscallWrapper(__NR_timer_getoverrun);
pub const __NR_move_mount: isize = 429usize as isize;
pub const __FLT64_MAX__: isize = 1usize as isize;
pub const SYS_creat: isize = __NR_creat;
pub const creat: SyscallWrapper = SyscallWrapper(__NR_creat);
pub const EREMOTEIO: isize = 121usize as isize;
pub const ENOSPC: isize = 28usize as isize;
pub const __amd64__: isize = 1usize as isize;
pub const ENOEXEC: isize = 8usize as isize;
pub const __WINT_WIDTH__: isize = 32usize as isize;
pub const __INT_LEAST8_MAX__: isize = 0x7fusize as isize;
pub const __USE_POSIX199309: isize = 1usize as isize;
pub const __INT_LEAST64_WIDTH__: isize = 64usize as isize;
pub const __LDBL_MAX_EXP__: isize = 16384usize as isize;
pub const SYS_ustat: isize = __NR_ustat;
pub const ustat: SyscallWrapper = SyscallWrapper(__NR_ustat);
pub const __FLT32X_MAX_10_EXP__: isize = 308usize as isize;
pub const finit_module: SyscallWrapper = SyscallWrapper(__NR_finit_module);
pub const __NR_uname: isize = 63usize as isize;
pub const MAP_GROWSDOWN: isize = 0x00100usize as isize;
pub const __SIZEOF_INT128__: isize = 16usize as isize;
pub const __FLT16_MIN__: isize = 6usize as isize;
pub const __FLT64X_IS_IEC_60559__: isize = 2usize as isize;
pub const epoll_create: SyscallWrapper = SyscallWrapper(__NR_epoll_create);
pub const __LDBL_MAX_10_EXP__: isize = 4932usize as isize;
pub const __NR_bpf: isize = 321usize as isize;
pub const SYS_msync: isize = __NR_msync;
pub const msync: SyscallWrapper = SyscallWrapper(__NR_msync);
pub const __ATOMIC_RELAXED: isize = 0usize as isize;
pub const __NR_setfsuid: isize = 122usize as isize;
pub const __NR_getsid: isize = 124usize as isize;
pub const SYS_unlinkat: isize = __NR_unlinkat;
pub const unlinkat: SyscallWrapper = SyscallWrapper(__NR_unlinkat);
pub const EMSGSIZE: isize = 90usize as isize;
pub const __FLT128_MIN__: isize = 3usize as isize;
pub const EDOM: isize = 33usize as isize;
pub const _LP64: isize = 1usize as isize;
pub const SYS_readlinkat: isize = __NR_readlinkat;
pub const readlinkat: SyscallWrapper = SyscallWrapper(__NR_readlinkat);
pub const SYS_socketpair: isize = __NR_socketpair;
pub const socketpair: SyscallWrapper = SyscallWrapper(__NR_socketpair);
pub const EFBIG: isize = 27usize as isize;
pub const __NR_brk: isize = 12usize as isize;
pub const __FLT64_MAX_EXP__: isize = 1024usize as isize;
pub const __S_IFSOCK: isize = 0140000usize as isize;
pub const ESRCH: isize = 3usize as isize;
pub const ECHRNG: isize = 44usize as isize;
pub const EHOSTDOWN: isize = 112usize as isize;
pub const MAP_HUGE_MASK: isize = 0x3fusize as isize;
pub const SEEK_END: isize = 2usize as isize;
pub const __SIZEOF_WCHAR_T__: isize = 4usize as isize;
pub const __USE_POSIX_IMPLICITLY: isize = 1usize as isize;
pub const __NR_clock_nanosleep: isize = 230usize as isize;
pub const __GNUC_PATCHLEVEL__: isize = 0usize as isize;
pub const __NR_sync_file_range: isize = 277usize as isize;
pub const ENOLCK: isize = 37usize as isize;
pub const ENFILE: isize = 23usize as isize;
pub const SYS_getdents: isize = __NR_getdents;
pub const getdents: SyscallWrapper = SyscallWrapper(__NR_getdents);
pub const SYS_mq_getsetattr: isize = __NR_mq_getsetattr;
pub const mq_getsetattr: SyscallWrapper = SyscallWrapper(__NR_mq_getsetattr);
pub const MADV_POPULATE_WRITE: isize = 23usize as isize;
pub const SYS_preadv2: isize = __NR_preadv2;
pub const preadv2: SyscallWrapper = SyscallWrapper(__NR_preadv2);
pub const SYS_readv: isize = __NR_readv;
pub const readv: SyscallWrapper = SyscallWrapper(__NR_readv);
pub const __FLT128_NORM_MAX__: isize = 1usize as isize;
pub const __S_ISUID: isize = 04000usize as isize;
pub const __FLT64_NORM_MAX__: isize = 1usize as isize;
pub const __FLT128_HAS_QUIET_NAN__: isize = 1usize as isize;
pub const O_TRUNC: isize = 01000usize as isize;
pub const ENOSYS: isize = 38usize as isize;
pub const __INTMAX_MAX__: isize = 0x7fffffffffffffffusize as isize;
pub const SYS_mq_unlink: isize = __NR_mq_unlink;
pub const mq_unlink: SyscallWrapper = SyscallWrapper(__NR_mq_unlink);
pub const __NR_setxattr: isize = 188usize as isize;
pub const SYS_sysfs: isize = __NR_sysfs;
pub const sysfs: SyscallWrapper = SyscallWrapper(__NR_sysfs);
pub const SYS_delete_module: isize = __NR_delete_module;
pub const delete_module: SyscallWrapper = SyscallWrapper(__NR_delete_module);
pub const __O_NOFOLLOW: isize = 0400000usize as isize;
pub const MADV_SEQUENTIAL: isize = 2usize as isize;
pub const SYS_mknodat: isize = __NR_mknodat;
pub const mknodat: SyscallWrapper = SyscallWrapper(__NR_mknodat);
pub const SYS_chdir: isize = __NR_chdir;
pub const chdir: SyscallWrapper = SyscallWrapper(__NR_chdir);
pub const SYS_eventfd: isize = __NR_eventfd;
pub const eventfd: SyscallWrapper = SyscallWrapper(__NR_eventfd);
pub const __NR_getpid: isize = 39usize as isize;
pub const __NR_adjtimex: isize = 159usize as isize;
pub const __FLT64X_MIN__: isize = 3usize as isize;
pub const __NR_renameat2: isize = 316usize as isize;
pub const O_WRONLY: isize = 01usize as isize;
pub const ENOTCONN: isize = 107usize as isize;
pub const SYS_io_getevents: isize = __NR_io_getevents;
pub const io_getevents: SyscallWrapper = SyscallWrapper(__NR_io_getevents);
pub const set_mempolicy_home_node: SyscallWrapper = SyscallWrapper(__NR_set_mempolicy_home_node);
pub const __NR_fsconfig: isize = 431usize as isize;
pub const __NR_fstat: isize = 5usize as isize;
pub const __NR_io_uring_setup: isize = 425usize as isize;
pub const AT_REMOVEDIR: isize = 0x200usize as isize;
pub const __GLIBC_USE_ISOC2X: isize = 0usize as isize;
pub const __GNUC_STDC_INLINE__: isize = 1usize as isize;
pub const SYS_rt_sigsuspend: isize = __NR_rt_sigsuspend;
pub const rt_sigsuspend: SyscallWrapper = SyscallWrapper(__NR_rt_sigsuspend);
pub const SYS_vserver: isize = __NR_vserver;
pub const vserver: SyscallWrapper = SyscallWrapper(__NR_vserver);
pub const __FLT64_HAS_DENORM__: isize = 1usize as isize;
pub const SYS_fsconfig: isize = __NR_fsconfig;
pub const fsconfig: SyscallWrapper = SyscallWrapper(__NR_fsconfig);
pub const __WORDSIZE_TIME64_COMPAT32: isize = 1usize as isize;
pub const __NR_sigaltstack: isize = 131usize as isize;
pub const ESRMNT: isize = 69usize as isize;
pub const __FLT32_EPSILON__: isize = 1usize as isize;
pub const R_OK: isize = 4usize as isize;
pub const MADV_RANDOM: isize = 1usize as isize;
pub const __FLT16_HAS_DENORM__: isize = 1usize as isize;
pub const __DBL_DECIMAL_DIG__: isize = 17usize as isize;
pub const __STDC_UTF_32__: isize = 1usize as isize;
pub const __INT_FAST8_WIDTH__: isize = 8usize as isize;
pub const SYS_setdomainname: isize = __NR_setdomainname;
pub const setdomainname: SyscallWrapper = SyscallWrapper(__NR_setdomainname);
pub const __FXSR__: isize = 1usize as isize;
pub const __NR_epoll_ctl: isize = 233usize as isize;
pub const EDEADLOCK: isize = EDEADLK;
pub const ENOANO: isize = 55usize as isize;
pub const __FLT32X_MAX__: isize = 1usize as isize;
pub const SYS_uname: isize = __NR_uname;
pub const uname: SyscallWrapper = SyscallWrapper(__NR_uname);
pub const SYS_getrandom: isize = __NR_getrandom;
pub const getrandom: SyscallWrapper = SyscallWrapper(__NR_getrandom);
pub const __BIG_ENDIAN: isize = 4321usize as isize;
pub const __NR_timer_getoverrun: isize = 225usize as isize;
pub const __BYTE_ORDER__: isize = __ORDER_LITTLE_ENDIAN__;
pub const F_EXLCK: isize = 4usize as isize;
pub const SYS_renameat: isize = __NR_renameat;
pub const renameat: SyscallWrapper = SyscallWrapper(__NR_renameat);
pub const __NR_fchownat: isize = 260usize as isize;
pub const __NR_uselib: isize = 134usize as isize;
pub const close_range: SyscallWrapper = SyscallWrapper(__NR_close_range);
pub const SYS_epoll_ctl_old: isize = __NR_epoll_ctl_old;
pub const epoll_ctl_old: SyscallWrapper = SyscallWrapper(__NR_epoll_ctl_old);
pub const __GCC_DESTRUCTIVE_SIZE: isize = 64usize as isize;
pub const _STRUCT_TIMESPEC: isize = 1usize as isize;
pub const __INTMAX_WIDTH__: isize = 64usize as isize;
pub const __NR_gettimeofday: isize = 96usize as isize;
pub const __NR_fallocate: isize = 285usize as isize;
pub const __NR_landlock_restrict_self: isize = 446usize as isize;
pub const MADV_NOHUGEPAGE: isize = 15usize as isize;
pub const SYS_utime: isize = __NR_utime;
pub const utime: SyscallWrapper = SyscallWrapper(__NR_utime);
pub const SYS_io_setup: isize = __NR_io_setup;
pub const io_setup: SyscallWrapper = SyscallWrapper(__NR_io_setup);
pub const SYS_pkey_free: isize = __NR_pkey_free;
pub const pkey_free: SyscallWrapper = SyscallWrapper(__NR_pkey_free);
pub const EISCONN: isize = 106usize as isize;
pub const MAP_HUGETLB: isize = 0x40000usize as isize;
pub const __FLT_DENORM_MIN__: isize = 1usize as isize;
pub const __NR_getpgrp: isize = 111usize as isize;
pub const _BITS_TIME64_H: isize = 1usize as isize;
pub const __NR_eventfd2: isize = 290usize as isize;
pub const EUSERS: isize = 87usize as isize;
pub const __INT8_MAX__: isize = 0x7fusize as isize;
pub const __LONG_WIDTH__: isize = 64usize as isize;
pub const __NR_mknod: isize = 133usize as isize;
pub const __PIC__: isize = 2usize as isize;
pub const ENETDOWN: isize = 100usize as isize;
pub const O_NOFOLLOW: isize = __O_NOFOLLOW;
pub const __NR_faccessat: isize = 269usize as isize;
pub const __FLT32X_NORM_MAX__: isize = 1usize as isize;
pub const __POSIX_FADV_NOREUSE: isize = 5usize as isize;
pub const ENOPROTOOPT: isize = 92usize as isize;
pub const __FLT_MAX__: isize = 3usize as isize;
pub const SYS_lremovexattr: isize = __NR_lremovexattr;
pub const lremovexattr: SyscallWrapper = SyscallWrapper(__NR_lremovexattr);
pub const SYS_sync_file_range: isize = __NR_sync_file_range;
pub const sync_file_range: SyscallWrapper = SyscallWrapper(__NR_sync_file_range);
pub const EMFILE: isize = 24usize as isize;
pub const __NR_listen: isize = 50usize as isize;
pub const __NR_fstatfs: isize = 138usize as isize;
pub const SYS_select: isize = __NR_select;
pub const select: SyscallWrapper = SyscallWrapper(__NR_select);
pub const sethostname: SyscallWrapper = SyscallWrapper(__NR_sethostname);
pub const __SSE2__: isize = 1usize as isize;
pub const SYS_truncate: isize = __NR_truncate;
pub const truncate: SyscallWrapper = SyscallWrapper(__NR_truncate);
pub const __NR_kexec_load: isize = 246usize as isize;
pub const SYS_syslog: isize = __NR_syslog;
pub const syslog: SyscallWrapper = SyscallWrapper(__NR_syslog);
pub const SYS_timer_gettime: isize = __NR_timer_gettime;
pub const timer_gettime: SyscallWrapper = SyscallWrapper(__NR_timer_gettime);
pub const SYS_munlock: isize = __NR_munlock;
pub const munlock: SyscallWrapper = SyscallWrapper(__NR_munlock);
pub const __NR_memfd_create: isize = 319usize as isize;
pub const MAP_FIXED: isize = 0x10usize as isize;
pub const __NR_migrate_pages: isize = 256usize as isize;
pub const ENOBUFS: isize = 105usize as isize;
pub const mq_notify: SyscallWrapper = SyscallWrapper(__NR_mq_notify);
pub const __SIZEOF_DOUBLE__: isize = 8usize as isize;
pub const SYS_chown: isize = __NR_chown;
pub const chown: SyscallWrapper = SyscallWrapper(__NR_chown);
pub const __NR_listxattr: isize = 194usize as isize;
pub const __FLT64_MIN__: isize = 2usize as isize;
pub const __INT_LEAST32_WIDTH__: isize = 32usize as isize;
pub const __NR_ptrace: isize = 101usize as isize;
pub const AT_EACCESS: isize = 0x200usize as isize;
pub const __NR_fadvise64: isize = 221usize as isize;
pub const __NR_shmctl: isize = 31usize as isize;
pub const __NR_getegid: isize = 108usize as isize;
pub const EFAULT: isize = 14usize as isize;
pub const SYS_vhangup: isize = __NR_vhangup;
pub const vhangup: SyscallWrapper = SyscallWrapper(__NR_vhangup);
pub const SYS_init_module: isize = __NR_init_module;
pub const init_module: SyscallWrapper = SyscallWrapper(__NR_init_module);
pub const __NR_process_madvise: isize = 440usize as isize;
pub const __DEC128_MAX_EXP__: isize = 6145usize as isize;
pub const SYS_munlockall: isize = __NR_munlockall;
pub const munlockall: SyscallWrapper = SyscallWrapper(__NR_munlockall);
pub const capset: SyscallWrapper = SyscallWrapper(__NR_capset);
pub const SYS_getcpu: isize = __NR_getcpu;
pub const getcpu: SyscallWrapper = SyscallWrapper(__NR_getcpu);
pub const __NR_set_mempolicy_home_node: isize = 450usize as isize;
pub const __NR_mq_notify: isize = 244usize as isize;
pub const __NR_rseq: isize = 334usize as isize;
pub const __FLT32X_HAS_QUIET_NAN__: isize = 1usize as isize;
pub const __ATOMIC_CONSUME: isize = 1usize as isize;
pub const __NR_recvmmsg: isize = 299usize as isize;
pub const SYS_move_pages: isize = __NR_move_pages;
pub const move_pages: SyscallWrapper = SyscallWrapper(__NR_move_pages);
pub const SYS_getpmsg: isize = __NR_getpmsg;
pub const getpmsg: SyscallWrapper = SyscallWrapper(__NR_getpmsg);
pub const __GNUC_MINOR__: isize = 3usize as isize;
pub const __INT_FAST16_WIDTH__: isize = 64usize as isize;
pub const __UINTMAX_MAX__: isize = 0xffffffffffffffffusize as isize;
pub const __PIE__: isize = 2usize as isize;
pub const __FLT32X_DENORM_MIN__: isize = 4usize as isize;
pub const ELIBBAD: isize = 80usize as isize;
pub const ESTRPIPE: isize = 86usize as isize;
pub const ECONNREFUSED: isize = 111usize as isize;
pub const SYS_accept4: isize = __NR_accept4;
pub const accept4: SyscallWrapper = SyscallWrapper(__NR_accept4);
pub const POSIX_FADV_RANDOM: isize = 1usize as isize;
pub const __NR_unlink: isize = 87usize as isize;
pub const EAGAIN: isize = 11usize as isize;
pub const __NR_setreuid: isize = 113usize as isize;
pub const __DBL_MAX_10_EXP__: isize = 308usize as isize;
pub const __LDBL_DENORM_MIN__: isize = 3usize as isize;
pub const S_ISUID: isize = __S_ISUID;
pub const __NR__sysctl: isize = 156usize as isize;
pub const MS_INVALIDATE: isize = 2usize as isize;
pub const SYS_mprotect: isize = __NR_mprotect;
pub const mprotect: SyscallWrapper = SyscallWrapper(__NR_mprotect);
pub const __STDC__: isize = 1usize as isize;
pub const __NR_capset: isize = 126usize as isize;
pub const SYS_mknod: isize = __NR_mknod;
pub const mknod: SyscallWrapper = SyscallWrapper(__NR_mknod);
pub const ELIBMAX: isize = 82usize as isize;
pub const EEXIST: isize = 17usize as isize;
pub const SYS_putpmsg: isize = __NR_putpmsg;
pub const putpmsg: SyscallWrapper = SyscallWrapper(__NR_putpmsg);
pub const EL2NSYNC: isize = 45usize as isize;
pub const __NR_setns: isize = 308usize as isize;
pub const __NR_shmget: isize = 29usize as isize;
pub const _BITS_STAT_H: isize = 1usize as isize;
pub const __ATOMIC_SEQ_CST: isize = 5usize as isize;
pub const __NR_faccessat2: isize = 439usize as isize;
pub const __NR_tkill: isize = 200usize as isize;
pub const ENOENT: isize = 2usize as isize;
pub const __NR_fchmod: isize = 91usize as isize;
pub const ENOPKG: isize = 65usize as isize;
pub const F_SETFD: isize = 2usize as isize;
pub const SYS_sendmsg: isize = __NR_sendmsg;
pub const sendmsg: SyscallWrapper = SyscallWrapper(__NR_sendmsg);
pub const __NR_timer_settime: isize = 223usize as isize;
pub const SYS_shutdown: isize = __NR_shutdown;
pub const shutdown: SyscallWrapper = SyscallWrapper(__NR_shutdown);
pub const SYS_setpriority: isize = __NR_setpriority;
pub const setpriority: SyscallWrapper = SyscallWrapper(__NR_setpriority);
pub const EXFULL: isize = 54usize as isize;
pub const SYS_rt_sigprocmask: isize = __NR_rt_sigprocmask;
pub const rt_sigprocmask: SyscallWrapper = SyscallWrapper(__NR_rt_sigprocmask);
pub const SYS_sched_rr_get_interval: isize = __NR_sched_rr_get_interval;
pub const sched_rr_get_interval: SyscallWrapper = SyscallWrapper(__NR_sched_rr_get_interval);
pub const __NR_sync: isize = 162usize as isize;
pub const __NR_close_range: isize = 436usize as isize;
pub const MADV_HUGEPAGE: isize = 14usize as isize;
pub const __NR_setsockopt: isize = 54usize as isize;
pub const __DEC64_SUBNORMAL_MIN__: isize = 0usize as isize;
pub const __NR_socket: isize = 41usize as isize;
pub const SYS_listen: isize = __NR_listen;
pub const listen: SyscallWrapper = SyscallWrapper(__NR_listen);
pub const __DEC128_MANT_DIG__: isize = 34usize as isize;
pub const SYS_fchmodat: isize = __NR_fchmodat;
pub const fchmodat: SyscallWrapper = SyscallWrapper(__NR_fchmodat);
pub const EKEYREVOKED: isize = 128usize as isize;
pub const __NR_fanotify_mark: isize = 301usize as isize;
pub const MAP_ANONYMOUS: isize = 0x20usize as isize;
pub const query_module: SyscallWrapper = SyscallWrapper(__NR_query_module);
pub const __SIZEOF_LONG_LONG__: isize = 8usize as isize;
pub const MAP_NONBLOCK: isize = 0x10000usize as isize;
pub const __NR_finit_module: isize = 313usize as isize;
pub const SYS_mq_open: isize = __NR_mq_open;
pub const mq_open: SyscallWrapper = SyscallWrapper(__NR_mq_open);
pub const __NR_syncfs: isize = 306usize as isize;
pub const __USE_ATFILE: isize = 1usize as isize;
pub const __NR_query_module: isize = 178usize as isize;
pub const POSIX_FADV_SEQUENTIAL: isize = 2usize as isize;
pub const __NR_setsid: isize = 112usize as isize;
pub const __O_PATH: isize = 010000000usize as isize;
pub const __NR_epoll_create: isize = 213usize as isize;
pub const __FLT128_DECIMAL_DIG__: isize = 36usize as isize;
pub const __GCC_ATOMIC_LLONG_LOCK_FREE: isize = 2usize as isize;
pub const ENOTUNIQ: isize = 76usize as isize;
pub const __FLT32_HAS_QUIET_NAN__: isize = 1usize as isize;
pub const __FLT_DECIMAL_DIG__: isize = 9usize as isize;
pub const __UINT_FAST16_MAX__: isize = 0xffffffffffffffffusize as isize;
pub const SYS_arch_prctl: isize = __NR_arch_prctl;
pub const arch_prctl: SyscallWrapper = SyscallWrapper(__NR_arch_prctl);
pub const POSIX_MADV_RANDOM: isize = 1usize as isize;
pub const __NR_epoll_wait: isize = 232usize as isize;
pub const __LDBL_NORM_MAX__: isize = 1usize as isize;
pub const __NR_tgkill: isize = 234usize as isize;
pub const X_OK: isize = 1usize as isize;
pub const __NR_flock: isize = 73usize as isize;
pub const __GCC_ATOMIC_SHORT_LOCK_FREE: isize = 2usize as isize;
pub const __NR_capget: isize = 125usize as isize;
pub const SYS_mq_timedsend: isize = __NR_mq_timedsend;
pub const mq_timedsend: SyscallWrapper = SyscallWrapper(__NR_mq_timedsend);
pub const SYS_timerfd_create: isize = __NR_timerfd_create;
pub const timerfd_create: SyscallWrapper = SyscallWrapper(__NR_timerfd_create);
pub const __NR_sethostname: isize = 170usize as isize;
pub const SYS_getresuid: isize = __NR_getresuid;
pub const getresuid: SyscallWrapper = SyscallWrapper(__NR_getresuid);
pub const EOPNOTSUPP: isize = 95usize as isize;
pub const __NR_add_key: isize = 248usize as isize;
pub const __NR_getrlimit: isize = 97usize as isize;
pub const __POSIX_FADV_DONTNEED: isize = 4usize as isize;
pub const SYS_setuid: isize = __NR_setuid;
pub const setuid: SyscallWrapper = SyscallWrapper(__NR_setuid);
pub const __NR_set_robust_list: isize = 273usize as isize;
pub const __ATOMIC_ACQ_REL: isize = 4usize as isize;
pub const S_IFIFO: isize = __S_IFIFO;
pub const __ATOMIC_RELEASE: isize = 3usize as isize;
pub const ENOTDIR: isize = 20usize as isize;
pub const EMEDIUMTYPE: isize = 124usize as isize;
pub const __S_ISGID: isize = 02000usize as isize;
